/* The following code was generated by JFlex 1.4.3 on 4/2/16 4:56 PM */

package com.csharp.lexer;

import com.intellij.lexer.FlexLexer;
import com.intellij.psi.tree.IElementType;
import com.csharp.CSharpTypes;
import java.util.*;
import static com.intellij.psi.TokenType.BAD_CHARACTER;
import static com.csharp.CSharpParserDefinition.*;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.4.3
 * on 4/2/16 4:56 PM from the specification file
 * <tt>C:/Users/rescas/IdeaProjects/intellij-csharp/src/com/csharp/lexer/go.flex</tt>
 */
public class CSharpLexer implements FlexLexer , CSharpTypes {
  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int WAITING_VALUE = 2;
  public static final int NESTING_COMMENT_CONTENT = 4;
  public static final int BLOCK_COMMENT_CONTENT = 6;
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0,  0,  1,  1,  2,  2,  3, 3
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\56\1\7\1\0\1\56\1\2\22\0\1\1\1\12\1\23"+
    "\1\11\1\114\1\110\1\17\1\43\1\33\1\34\1\10\1\13\1\106"+
    "\1\66\1\64\1\6\1\45\1\61\6\16\2\15\1\104\1\20\1\35"+
    "\1\105\1\36\1\44\1\107\1\14\1\60\2\14\1\65\1\21\5\3"+
    "\1\57\3\3\1\67\4\3\1\55\2\3\1\62\2\3\1\31\1\25"+
    "\1\32\1\112\1\5\1\24\1\46\1\47\1\70\1\42\1\73\1\50"+
    "\1\72\1\77\1\63\1\102\1\76\1\71\1\100\1\51\1\75\1\101"+
    "\1\30\1\22\1\27\1\52\1\54\1\53\1\41\1\26\1\74\1\103"+
    "\1\37\1\111\1\40\1\113\53\0\1\3\12\0\1\3\4\0\1\3"+
    "\5\0\27\3\1\0\37\3\1\0\u01ca\3\4\0\14\3\16\0\5\3"+
    "\7\0\1\3\1\0\1\3\201\0\5\3\1\0\2\3\2\0\4\3"+
    "\10\0\1\3\1\0\3\3\1\0\1\3\1\0\24\3\1\0\123\3"+
    "\1\0\213\3\10\0\236\3\11\0\46\3\2\0\1\3\7\0\47\3"+
    "\110\0\33\3\5\0\3\3\55\0\53\3\25\0\12\4\4\0\2\3"+
    "\1\0\143\3\1\0\1\3\17\0\2\3\7\0\2\3\12\4\3\3"+
    "\2\0\1\3\20\0\1\3\1\0\36\3\35\0\131\3\13\0\1\3"+
    "\16\0\12\4\41\3\11\0\2\3\4\0\1\3\5\0\26\3\4\0"+
    "\1\3\11\0\1\3\3\0\1\3\27\0\31\3\107\0\1\3\1\0"+
    "\13\3\127\0\66\3\3\0\1\3\22\0\1\3\7\0\12\3\4\0"+
    "\12\4\1\0\7\3\1\0\7\3\5\0\10\3\2\0\2\3\2\0"+
    "\26\3\1\0\7\3\1\0\1\3\3\0\4\3\3\0\1\3\20\0"+
    "\1\3\15\0\2\3\1\0\3\3\4\0\12\4\2\3\23\0\6\3"+
    "\4\0\2\3\2\0\26\3\1\0\7\3\1\0\2\3\1\0\2\3"+
    "\1\0\2\3\37\0\4\3\1\0\1\3\7\0\12\4\2\0\3\3"+
    "\20\0\11\3\1\0\3\3\1\0\26\3\1\0\7\3\1\0\2\3"+
    "\1\0\5\3\3\0\1\3\22\0\1\3\17\0\2\3\4\0\12\4"+
    "\25\0\10\3\2\0\2\3\2\0\26\3\1\0\7\3\1\0\2\3"+
    "\1\0\5\3\3\0\1\3\36\0\2\3\1\0\3\3\4\0\12\4"+
    "\1\0\1\3\21\0\1\3\1\0\6\3\3\0\3\3\1\0\4\3"+
    "\3\0\2\3\1\0\1\3\1\0\2\3\3\0\2\3\3\0\3\3"+
    "\3\0\14\3\26\0\1\3\25\0\12\4\25\0\10\3\1\0\3\3"+
    "\1\0\27\3\1\0\12\3\1\0\5\3\3\0\1\3\32\0\2\3"+
    "\6\0\2\3\4\0\12\4\25\0\10\3\1\0\3\3\1\0\27\3"+
    "\1\0\12\3\1\0\5\3\3\0\1\3\40\0\1\3\1\0\2\3"+
    "\4\0\12\4\1\0\2\3\22\0\10\3\1\0\3\3\1\0\51\3"+
    "\2\0\1\3\20\0\1\3\21\0\2\3\4\0\12\4\12\0\6\3"+
    "\5\0\22\3\3\0\30\3\1\0\11\3\1\0\1\3\2\0\7\3"+
    "\72\0\60\3\1\0\2\3\14\0\7\3\11\0\12\4\47\0\2\3"+
    "\1\0\1\3\2\0\2\3\1\0\1\3\2\0\1\3\6\0\4\3"+
    "\1\0\7\3\1\0\3\3\1\0\1\3\1\0\1\3\2\0\2\3"+
    "\1\0\4\3\1\0\2\3\11\0\1\3\2\0\5\3\1\0\1\3"+
    "\11\0\12\4\2\0\4\3\40\0\1\3\37\0\12\4\26\0\10\3"+
    "\1\0\44\3\33\0\5\3\163\0\53\3\24\0\1\3\12\4\6\0"+
    "\6\3\4\0\4\3\3\0\1\3\3\0\2\3\7\0\3\3\4\0"+
    "\15\3\14\0\1\3\1\0\12\4\6\0\46\3\1\0\1\3\5\0"+
    "\1\3\2\0\53\3\1\0\u014d\3\1\0\4\3\2\0\7\3\1\0"+
    "\1\3\1\0\4\3\2\0\51\3\1\0\4\3\2\0\41\3\1\0"+
    "\4\3\2\0\7\3\1\0\1\3\1\0\4\3\2\0\17\3\1\0"+
    "\71\3\1\0\4\3\2\0\103\3\45\0\20\3\20\0\125\3\14\0"+
    "\u026c\3\2\0\21\3\1\0\32\3\5\0\113\3\25\0\15\3\1\0"+
    "\4\3\16\0\22\3\16\0\22\3\16\0\15\3\1\0\3\3\17\0"+
    "\64\3\43\0\1\3\4\0\1\3\3\0\12\4\46\0\12\4\6\0"+
    "\130\3\10\0\51\3\1\0\1\3\5\0\106\3\12\0\35\3\51\0"+
    "\12\4\36\3\2\0\5\3\13\0\54\3\25\0\7\3\10\0\12\4"+
    "\46\0\27\3\11\0\65\3\53\0\12\4\6\0\12\4\15\0\1\3"+
    "\135\0\57\3\21\0\7\3\4\0\12\4\51\0\36\3\15\0\2\3"+
    "\12\4\54\3\32\0\44\3\34\0\12\4\3\0\3\3\12\4\44\3"+
    "\153\0\4\3\1\0\4\3\3\0\2\3\11\0\300\3\100\0\u0116\3"+
    "\2\0\6\3\2\0\46\3\2\0\6\3\2\0\10\3\1\0\1\3"+
    "\1\0\1\3\1\0\1\3\1\0\37\3\2\0\65\3\1\0\7\3"+
    "\1\0\1\3\3\0\3\3\1\0\7\3\3\0\4\3\2\0\6\3"+
    "\4\0\15\3\5\0\3\3\1\0\7\3\164\0\1\3\15\0\1\3"+
    "\20\0\15\3\145\0\1\3\4\0\1\3\2\0\12\3\1\0\1\3"+
    "\3\0\5\3\6\0\1\3\1\0\1\3\1\0\1\3\1\0\4\3"+
    "\1\0\13\3\2\0\4\3\5\0\5\3\4\0\1\3\64\0\2\3"+
    "\u0a7b\0\57\3\1\0\57\3\1\0\205\3\6\0\4\3\3\0\2\3"+
    "\14\0\46\3\1\0\1\3\5\0\1\3\2\0\70\3\7\0\1\3"+
    "\20\0\27\3\11\0\7\3\1\0\7\3\1\0\7\3\1\0\7\3"+
    "\1\0\7\3\1\0\7\3\1\0\7\3\1\0\7\3\120\0\1\3"+
    "\u01d5\0\2\3\52\0\5\3\5\0\2\3\4\0\126\3\6\0\3\3"+
    "\1\0\132\3\1\0\4\3\5\0\51\3\3\0\136\3\21\0\33\3"+
    "\65\0\20\3\u0200\0\u19b6\3\112\0\u51cd\3\63\0\u048d\3\103\0\56\3"+
    "\2\0\u010d\3\3\0\20\3\12\4\2\3\24\0\57\3\20\0\31\3"+
    "\10\0\106\3\61\0\11\3\2\0\147\3\2\0\4\3\1\0\4\3"+
    "\14\0\13\3\115\0\12\3\1\0\3\3\1\0\4\3\1\0\27\3"+
    "\35\0\64\3\16\0\62\3\34\0\12\4\30\0\6\3\3\0\1\3"+
    "\4\0\12\4\34\3\12\0\27\3\31\0\35\3\7\0\57\3\34\0"+
    "\1\3\12\4\46\0\51\3\27\0\3\3\1\0\10\3\4\0\12\4"+
    "\6\0\27\3\3\0\1\3\5\0\60\3\1\0\1\3\3\0\2\3"+
    "\2\0\5\3\2\0\1\3\1\0\1\3\30\0\3\3\2\0\13\3"+
    "\7\0\3\3\14\0\6\3\2\0\6\3\2\0\6\3\11\0\7\3"+
    "\1\0\7\3\221\0\43\3\15\0\12\4\6\0\u2ba4\3\14\0\27\3"+
    "\4\0\61\3\u2104\0\u016e\3\2\0\152\3\46\0\7\3\14\0\5\3"+
    "\5\0\1\3\1\0\12\3\1\0\15\3\1\0\5\3\1\0\1\3"+
    "\1\0\2\3\1\0\2\3\1\0\154\3\41\0\u016b\3\22\0\100\3"+
    "\2\0\66\3\50\0\14\3\164\0\5\3\1\0\207\3\23\0\12\4"+
    "\7\0\32\3\6\0\32\3\13\0\131\3\3\0\6\3\2\0\6\3"+
    "\2\0\6\3\2\0\3\3\43\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\4\0\1\1\2\2\2\3\1\4\1\5\1\1\1\6"+
    "\1\7\1\10\1\11\1\12\1\3\2\1\3\3\1\13"+
    "\1\14\1\15\1\16\1\17\1\20\1\21\1\22\2\3"+
    "\1\1\1\23\1\10\10\3\1\24\1\25\10\3\1\26"+
    "\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36"+
    "\4\37\4\40\2\3\1\0\1\41\1\42\1\43\1\44"+
    "\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\0"+
    "\2\10\1\54\2\0\1\55\1\56\1\0\1\3\1\0"+
    "\1\57\2\0\1\60\1\0\6\3\1\0\1\61\1\62"+
    "\1\63\1\64\1\65\3\3\1\66\5\0\1\67\6\3"+
    "\1\70\22\3\1\71\1\72\1\73\1\3\3\54\1\74"+
    "\1\75\1\76\21\3\1\77\7\3\1\100\1\101\1\102"+
    "\1\103\1\104\1\105\1\106\1\107\1\110\1\111\1\112"+
    "\1\113\1\3\1\0\2\46\1\114\1\115\1\116\1\10"+
    "\2\54\1\0\1\117\1\3\1\120\2\3\1\57\4\0"+
    "\1\60\1\0\1\121\6\3\1\122\2\3\4\0\1\123"+
    "\1\124\1\125\1\126\10\3\1\127\5\0\1\10\1\0"+
    "\1\10\3\3\1\130\13\3\1\131\2\3\1\132\1\3"+
    "\1\133\14\3\1\134\1\3\1\54\1\135\6\3\1\136"+
    "\3\3\1\137\13\3\1\140\6\3\1\141\1\3\1\142"+
    "\1\117\3\3\4\0\1\121\12\3\4\0\1\143\2\3"+
    "\1\144\6\3\5\0\1\10\2\0\6\3\1\145\1\146"+
    "\1\147\1\150\6\3\1\151\1\152\2\3\1\153\1\3"+
    "\1\154\5\3\1\155\2\3\1\156\1\3\1\157\4\3"+
    "\1\160\1\3\1\161\1\162\1\3\1\163\3\3\1\164"+
    "\1\3\1\165\12\3\1\166\4\3\2\0\1\3\1\167"+
    "\7\3\1\170\1\171\1\172\1\173\6\3\3\0\1\54"+
    "\1\3\1\174\1\175\1\3\1\176\1\177\1\200\1\201"+
    "\1\3\1\202\4\3\1\203\2\3\1\204\3\3\1\205"+
    "\2\3\1\206\1\207\1\210\2\3\1\211\3\3\1\212"+
    "\1\213\13\3\1\214\1\215\1\0\1\216\1\217\1\220"+
    "\1\221\1\3\1\222\1\223\1\224\1\171\5\3\1\225"+
    "\1\0\5\3\1\226\1\227\2\3\1\230\1\231\6\3"+
    "\1\232\1\3\1\233\1\3\1\234\5\3\1\235\4\3"+
    "\1\236\1\237\1\3\1\240\2\3\1\241\1\242\1\3"+
    "\1\243\6\3\1\244\1\3\1\245\2\3\1\246\1\3"+
    "\1\247\1\3\1\250\2\3\1\251\1\3\1\252\1\3"+
    "\1\253\2\3\1\254\1\255\1\256\1\257\1\260\1\261"+
    "\1\3\1\262\2\3\1\263\1\264\1\265\1\266\1\267"+
    "\1\270\1\271";

  private static int [] zzUnpackAction() {
    int [] result = new int[602];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\115\0\232\0\347\0\u0134\0\u0181\0\u01ce\0\u021b"+
    "\0\u0268\0\u02b5\0\u0302\0\u034f\0\u039c\0\u03e9\0\u0436\0\u0483"+
    "\0\u0134\0\u04d0\0\u051d\0\u056a\0\u05b7\0\u0604\0\u0651\0\u0134"+
    "\0\u0134\0\u0134\0\u0134\0\u069e\0\u06eb\0\u0134\0\u0134\0\u0738"+
    "\0\u0785\0\u07d2\0\u0134\0\u081f\0\u086c\0\u08b9\0\u0906\0\u0953"+
    "\0\u09a0\0\u09ed\0\u0a3a\0\u0a87\0\u0ad4\0\u0b21\0\u0b6e\0\u0bbb"+
    "\0\u0c08\0\u0c55\0\u0ca2\0\u0cef\0\u0d3c\0\u0d89\0\u0134\0\u0dd6"+
    "\0\u0134\0\u0134\0\u0e23\0\u0e70\0\u0ebd\0\u0f0a\0\u0134\0\u0f57"+
    "\0\u0fa4\0\u0134\0\u0ff1\0\u103e\0\u108b\0\u0134\0\u10d8\0\u1125"+
    "\0\u1172\0\u11bf\0\u120c\0\u0134\0\u0134\0\u0134\0\u0134\0\u1259"+
    "\0\u12a6\0\u12f3\0\u0134\0\u0134\0\u0134\0\u1340\0\u138d\0\u13da"+
    "\0\u0134\0\u1427\0\u1474\0\u0134\0\u0134\0\u14c1\0\u150e\0\u051d"+
    "\0\u155b\0\u15a8\0\u056a\0\u15f5\0\u1642\0\u168f\0\u16dc\0\u1729"+
    "\0\u1776\0\u17c3\0\u1810\0\u185d\0\u18aa\0\u18f7\0\u0134\0\u1944"+
    "\0\u0134\0\u1991\0\u19de\0\u1a2b\0\u1a78\0\u1ac5\0\u1b12\0\u1b5f"+
    "\0\u1bac\0\u1bf9\0\u1c46\0\u1c93\0\u1ce0\0\u1d2d\0\u1d7a\0\u1dc7"+
    "\0\u1e14\0\u1e61\0\u1eae\0\u1efb\0\u1f48\0\u1f95\0\u1fe2\0\u202f"+
    "\0\u207c\0\u20c9\0\u2116\0\u2163\0\u21b0\0\u21fd\0\u224a\0\u2297"+
    "\0\u22e4\0\u2331\0\u237e\0\u23cb\0\u021b\0\u021b\0\u2418\0\u2465"+
    "\0\u24b2\0\u24ff\0\u254c\0\u2599\0\u0134\0\u0134\0\u25e6\0\u2633"+
    "\0\u2680\0\u26cd\0\u271a\0\u2767\0\u27b4\0\u2801\0\u284e\0\u289b"+
    "\0\u28e8\0\u2935\0\u2982\0\u29cf\0\u2a1c\0\u2a69\0\u2ab6\0\u021b"+
    "\0\u2b03\0\u2b50\0\u2b9d\0\u2bea\0\u2c37\0\u2c84\0\u2cd1\0\u0134"+
    "\0\u0134\0\u0134\0\u0134\0\u0134\0\u0134\0\u2d1e\0\u0134\0\u0134"+
    "\0\u0134\0\u0134\0\u0134\0\u2d6b\0\u2db8\0\u2e05\0\u0134\0\u2e52"+
    "\0\u0134\0\u0134\0\u0134\0\u2e9f\0\u2eec\0\u2f39\0\u2f86\0\u2fd3"+
    "\0\u021b\0\u3020\0\u306d\0\u0134\0\u30ba\0\u3107\0\u3154\0\u31a1"+
    "\0\u0134\0\u31ee\0\u323b\0\u3288\0\u32d5\0\u3322\0\u336f\0\u33bc"+
    "\0\u3409\0\u021b\0\u3456\0\u34a3\0\u34f0\0\u353d\0\u358a\0\u35d7"+
    "\0\u0134\0\u0134\0\u3624\0\u0134\0\u3671\0\u36be\0\u370b\0\u3758"+
    "\0\u37a5\0\u37f2\0\u383f\0\u388c\0\u0134\0\u38d9\0\u3926\0\u3973"+
    "\0\u39c0\0\u3a0d\0\u3a5a\0\u3aa7\0\u3af4\0\u3b41\0\u3b8e\0\u3bdb"+
    "\0\u021b\0\u3c28\0\u3c75\0\u3cc2\0\u3d0f\0\u3d5c\0\u3da9\0\u3df6"+
    "\0\u3e43\0\u3e90\0\u3edd\0\u3f2a\0\u3f77\0\u3fc4\0\u4011\0\u021b"+
    "\0\u405e\0\u021b\0\u40ab\0\u40f8\0\u4145\0\u4192\0\u41df\0\u422c"+
    "\0\u4279\0\u42c6\0\u4313\0\u4360\0\u43ad\0\u43fa\0\u4447\0\u4494"+
    "\0\u1340\0\u0134\0\u44e1\0\u452e\0\u457b\0\u45c8\0\u4615\0\u4662"+
    "\0\u021b\0\u46af\0\u46fc\0\u4749\0\u021b\0\u4796\0\u47e3\0\u4830"+
    "\0\u487d\0\u48ca\0\u4917\0\u4964\0\u49b1\0\u49fe\0\u4a4b\0\u4a98"+
    "\0\u021b\0\u4ae5\0\u4b32\0\u4b7f\0\u4bcc\0\u4c19\0\u4c66\0\u0134"+
    "\0\u4cb3\0\u0134\0\u0134\0\u4d00\0\u4d4d\0\u4d9a\0\u4de7\0\u4e34"+
    "\0\u4e81\0\u4ece\0\u0134\0\u4f1b\0\u4f68\0\u4fb5\0\u5002\0\u504f"+
    "\0\u509c\0\u50e9\0\u5136\0\u5183\0\u51d0\0\u521d\0\u526a\0\u52b7"+
    "\0\u5304\0\u0134\0\u5351\0\u539e\0\u021b\0\u53eb\0\u5438\0\u5485"+
    "\0\u54d2\0\u551f\0\u556c\0\u55b9\0\u5606\0\u5653\0\u56a0\0\u56ed"+
    "\0\u573a\0\u5787\0\u57d4\0\u5821\0\u586e\0\u58bb\0\u5908\0\u5955"+
    "\0\u59a2\0\u021b\0\u021b\0\u021b\0\u021b\0\u59ef\0\u5a3c\0\u5a89"+
    "\0\u5ad6\0\u5b23\0\u5b70\0\u021b\0\u021b\0\u5bbd\0\u5c0a\0\u021b"+
    "\0\u5c57\0\u021b\0\u5ca4\0\u5cf1\0\u5d3e\0\u5d8b\0\u5dd8\0\u021b"+
    "\0\u5e25\0\u5e72\0\u021b\0\u5ebf\0\u021b\0\u5f0c\0\u5f59\0\u5fa6"+
    "\0\u5ff3\0\u021b\0\u6040\0\u021b\0\u021b\0\u608d\0\u021b\0\u60da"+
    "\0\u6127\0\u6174\0\u021b\0\u61c1\0\u021b\0\u620e\0\u625b\0\u62a8"+
    "\0\u62f5\0\u6342\0\u638f\0\u63dc\0\u6429\0\u6476\0\u64c3\0\u021b"+
    "\0\u6510\0\u655d\0\u65aa\0\u65f7\0\u6644\0\u6691\0\u66de\0\u021b"+
    "\0\u672b\0\u6778\0\u67c5\0\u6812\0\u685f\0\u68ac\0\u68f9\0\u021b"+
    "\0\u6946\0\u021b\0\u021b\0\u6993\0\u69e0\0\u6a2d\0\u6a7a\0\u6ac7"+
    "\0\u6b14\0\u6b61\0\u6bae\0\u6bfb\0\u6c48\0\u6c95\0\u021b\0\u021b"+
    "\0\u6ce2\0\u021b\0\u021b\0\u021b\0\u021b\0\u6d2f\0\u021b\0\u6d7c"+
    "\0\u6dc9\0\u6e16\0\u6e63\0\u021b\0\u6eb0\0\u6efd\0\u021b\0\u6f4a"+
    "\0\u6f97\0\u6fe4\0\u021b\0\u7031\0\u707e\0\u021b\0\u021b\0\u021b"+
    "\0\u70cb\0\u7118\0\u021b\0\u7165\0\u71b2\0\u71ff\0\u021b\0\u021b"+
    "\0\u724c\0\u7299\0\u72e6\0\u7333\0\u7380\0\u73cd\0\u741a\0\u7467"+
    "\0\u74b4\0\u7501\0\u754e\0\u021b\0\u021b\0\u759b\0\u021b\0\u021b"+
    "\0\u021b\0\u021b\0\u75e8\0\u021b\0\u021b\0\u021b\0\u0134\0\u7635"+
    "\0\u7682\0\u76cf\0\u771c\0\u7769\0\u021b\0\u77b6\0\u7803\0\u7850"+
    "\0\u789d\0\u78ea\0\u7937\0\u021b\0\u021b\0\u7984\0\u79d1\0\u021b"+
    "\0\u021b\0\u7a1e\0\u7a6b\0\u7ab8\0\u7b05\0\u7b52\0\u7b9f\0\u021b"+
    "\0\u7bec\0\u021b\0\u7c39\0\u021b\0\u7c86\0\u7cd3\0\u7d20\0\u7d6d"+
    "\0\u7dba\0\u021b\0\u7e07\0\u7e54\0\u7ea1\0\u7eee\0\u021b\0\u021b"+
    "\0\u7f3b\0\u021b\0\u7f88\0\u7fd5\0\u021b\0\u021b\0\u8022\0\u021b"+
    "\0\u806f\0\u80bc\0\u8109\0\u8156\0\u81a3\0\u81f0\0\u021b\0\u823d"+
    "\0\u021b\0\u828a\0\u82d7\0\u021b\0\u8324\0\u021b\0\u8371\0\u021b"+
    "\0\u83be\0\u840b\0\u021b\0\u8458\0\u021b\0\u84a5\0\u021b\0\u84f2"+
    "\0\u853f\0\u021b\0\u021b\0\u021b\0\u021b\0\u021b\0\u021b\0\u858c"+
    "\0\u021b\0\u85d9\0\u8626\0\u021b\0\u021b\0\u021b\0\u021b\0\u021b"+
    "\0\u021b\0\u021b";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[602];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\5\1\6\1\7\1\10\1\5\1\11\1\12\1\7"+
    "\1\13\1\14\1\15\1\16\1\10\2\17\1\20\1\21"+
    "\1\10\1\22\1\23\1\24\1\5\1\25\1\26\1\27"+
    "\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37"+
    "\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47"+
    "\1\50\1\51\1\52\1\53\1\10\1\6\2\10\1\17"+
    "\1\10\1\54\1\55\1\10\1\56\1\10\1\57\1\60"+
    "\1\61\1\62\1\63\1\64\3\10\1\65\1\66\1\10"+
    "\1\67\1\70\1\71\1\72\1\73\1\74\1\75\1\76"+
    "\1\77\7\5\1\0\105\5\6\100\1\101\1\102\3\100"+
    "\1\103\101\100\6\104\1\105\1\106\1\107\104\104\116\0"+
    "\1\6\54\0\1\6\40\0\1\7\4\0\1\7\110\0"+
    "\3\10\6\0\3\10\2\0\2\10\3\0\3\10\10\0"+
    "\2\10\2\0\11\10\1\0\5\10\1\0\1\10\1\0"+
    "\15\10\14\0\2\10\1\110\6\0\1\10\2\111\2\0"+
    "\2\10\3\0\3\10\10\0\2\10\2\0\1\111\10\10"+
    "\1\0\2\10\1\111\2\10\1\112\1\10\1\0\15\10"+
    "\17\0\1\113\1\0\1\114\2\0\1\115\71\0\1\116"+
    "\114\0\1\117\21\0\1\120\137\0\1\121\1\122\46\0"+
    "\1\123\22\0\1\124\71\0\1\125\14\0\1\17\7\0"+
    "\2\17\2\0\1\126\23\0\1\17\2\0\1\126\3\0"+
    "\2\127\1\0\1\130\1\0\1\17\1\0\1\131\1\132"+
    "\1\133\5\0\1\133\40\0\1\134\65\0\1\135\12\0"+
    "\3\10\6\0\3\10\2\0\2\10\1\136\2\0\3\10"+
    "\10\0\2\10\2\0\11\10\1\0\5\10\1\0\1\10"+
    "\1\0\4\10\1\137\10\10\11\0\23\140\1\141\1\140"+
    "\1\142\67\140\24\143\1\144\70\143\3\0\3\10\6\0"+
    "\3\10\2\0\2\10\1\145\2\0\3\10\10\0\2\10"+
    "\2\0\11\10\1\0\5\10\1\0\1\10\1\0\15\10"+
    "\14\0\3\10\6\0\3\10\2\0\2\10\3\0\3\10"+
    "\10\0\1\146\1\10\2\0\2\10\1\147\2\10\1\150"+
    "\3\10\1\0\4\10\1\151\1\0\1\10\1\0\4\10"+
    "\1\152\3\10\1\153\4\10\14\0\3\10\6\0\3\10"+
    "\2\0\2\10\1\154\2\0\3\10\10\0\2\10\2\0"+
    "\11\10\1\0\5\10\1\0\1\10\1\0\15\10\46\0"+
    "\1\155\1\156\46\0\1\157\45\0\1\160\46\0\1\161"+
    "\12\0\3\10\6\0\3\10\2\0\2\10\3\0\3\10"+
    "\10\0\2\10\2\0\11\10\1\0\5\10\1\0\1\10"+
    "\1\0\10\10\1\162\4\10\14\0\3\10\6\0\3\10"+
    "\2\0\2\10\3\0\3\10\10\0\2\10\2\0\11\10"+
    "\1\0\5\10\1\0\1\10\1\0\4\10\1\163\1\164"+
    "\1\165\6\10\11\0\2\166\1\0\4\166\1\0\15\166"+
    "\1\167\30\166\1\0\36\166\5\0\1\170\7\0\2\170"+
    "\2\0\1\126\4\0\1\171\16\0\1\170\1\0\1\172"+
    "\1\126\3\0\2\127\1\0\1\130\1\172\1\170\1\171"+
    "\1\131\1\132\1\133\5\0\1\133\24\0\3\10\6\0"+
    "\3\10\2\0\2\10\3\0\1\10\1\173\1\10\10\0"+
    "\1\174\1\175\2\0\2\10\1\176\6\10\1\0\5\10"+
    "\1\0\1\10\1\0\2\10\1\177\12\10\14\0\3\10"+
    "\6\0\3\10\2\0\1\10\1\200\3\0\3\10\10\0"+
    "\2\10\2\0\1\10\1\201\7\10\1\0\5\10\1\0"+
    "\1\10\1\0\5\10\1\202\1\203\6\10\14\0\3\10"+
    "\6\0\3\10\2\0\1\10\1\204\3\0\3\10\10\0"+
    "\2\10\2\0\1\10\1\205\7\10\1\0\4\10\1\206"+
    "\1\0\1\10\1\0\2\10\1\207\3\10\1\210\6\10"+
    "\14\0\3\10\6\0\3\10\2\0\2\10\3\0\3\10"+
    "\10\0\2\10\2\0\1\10\1\211\5\10\1\212\1\10"+
    "\1\0\5\10\1\0\1\10\1\0\4\10\1\213\10\10"+
    "\14\0\3\10\6\0\3\10\2\0\1\10\1\214\3\0"+
    "\3\10\10\0\2\10\2\0\11\10\1\0\5\10\1\0"+
    "\1\10\1\0\5\10\1\215\2\10\1\216\4\10\14\0"+
    "\3\10\6\0\3\10\2\0\2\10\3\0\3\10\10\0"+
    "\2\10\2\0\11\10\1\0\4\10\1\217\1\0\1\10"+
    "\1\0\6\10\1\220\6\10\14\0\3\10\6\0\3\10"+
    "\2\0\2\10\3\0\1\10\1\221\1\10\10\0\2\10"+
    "\2\0\4\10\1\222\4\10\1\0\4\10\1\223\1\0"+
    "\1\10\1\0\2\10\1\224\12\10\14\0\3\10\6\0"+
    "\3\10\2\0\2\10\3\0\1\10\1\225\1\10\10\0"+
    "\2\10\2\0\3\10\1\226\1\227\4\10\1\0\5\10"+
    "\1\0\1\10\1\0\11\10\1\230\3\10\16\0\1\231"+
    "\7\0\2\232\26\0\1\233\13\0\1\232\2\0\1\234"+
    "\116\0\1\235\16\0\1\236\12\0\3\10\6\0\3\10"+
    "\2\0\2\10\3\0\3\10\10\0\2\10\2\0\1\10"+
    "\1\237\7\10\1\0\5\10\1\0\1\10\1\0\2\10"+
    "\1\240\3\10\1\241\1\10\1\242\4\10\14\0\3\10"+
    "\6\0\3\10\2\0\2\10\3\0\3\10\10\0\2\10"+
    "\2\0\11\10\1\0\5\10\1\0\1\10\1\0\4\10"+
    "\1\243\1\10\1\244\6\10\14\0\3\10\6\0\3\10"+
    "\2\0\1\10\1\245\3\0\3\10\10\0\2\10\2\0"+
    "\11\10\1\0\5\10\1\0\1\10\1\0\4\10\1\246"+
    "\1\10\1\247\6\10\14\0\3\10\6\0\3\10\2\0"+
    "\2\10\3\0\1\250\1\10\1\251\10\0\2\10\2\0"+
    "\4\10\1\252\1\10\1\253\2\10\1\0\5\10\1\0"+
    "\1\10\1\0\2\10\1\254\12\10\14\0\3\10\6\0"+
    "\3\10\2\0\2\10\3\0\3\10\10\0\2\10\2\0"+
    "\11\10\1\0\4\10\1\255\1\0\1\10\1\0\15\10"+
    "\14\0\3\10\6\0\3\10\2\0\1\10\1\256\3\0"+
    "\3\10\10\0\2\10\2\0\2\10\1\257\1\10\1\260"+
    "\1\10\1\261\1\262\1\10\1\0\5\10\1\0\1\10"+
    "\1\0\12\10\1\263\2\10\14\0\3\10\6\0\3\10"+
    "\2\0\1\10\1\264\3\0\3\10\10\0\2\10\2\0"+
    "\1\10\1\265\5\10\1\266\1\10\1\0\5\10\1\0"+
    "\1\10\1\0\15\10\14\0\3\10\6\0\3\10\2\0"+
    "\2\10\3\0\3\10\10\0\2\10\2\0\11\10\1\0"+
    "\5\10\1\0\1\10\1\0\6\10\1\267\6\10\47\0"+
    "\1\270\46\0\1\271\114\0\1\272\114\0\1\273\3\0"+
    "\1\274\110\0\1\275\4\0\1\276\107\0\1\277\7\0"+
    "\6\100\2\0\3\100\1\0\101\100\13\0\1\300\107\0"+
    "\1\301\106\0\6\104\3\0\104\104\10\0\1\302\112\0"+
    "\1\303\111\0\2\10\1\111\6\0\1\10\2\111\2\0"+
    "\2\10\3\0\3\10\10\0\2\10\2\0\1\111\1\304"+
    "\7\10\1\0\2\10\1\111\2\10\1\112\1\10\1\0"+
    "\15\10\14\0\2\10\1\111\6\0\1\10\2\111\2\0"+
    "\2\10\3\0\3\10\10\0\2\10\2\0\1\111\10\10"+
    "\1\0\2\10\1\111\2\10\1\112\1\10\1\0\15\10"+
    "\16\0\1\305\7\0\2\305\26\0\1\305\13\0\1\305"+
    "\33\0\7\113\1\0\105\113\2\120\1\306\4\120\1\307"+
    "\105\120\36\0\1\310\46\0\1\311\114\0\1\312\72\0"+
    "\1\131\110\0\1\313\111\0\2\313\5\0\1\131\36\0"+
    "\1\314\7\0\2\314\26\0\1\315\13\0\1\314\40\0"+
    "\1\231\5\0\1\316\1\0\2\231\26\0\1\231\13\0"+
    "\1\231\4\0\1\316\26\0\23\136\1\317\71\136\3\0"+
    "\3\10\6\0\3\10\2\0\2\10\3\0\3\10\10\0"+
    "\2\10\2\0\1\10\1\320\1\10\1\321\1\10\1\322"+
    "\3\10\1\0\5\10\1\0\1\10\1\0\11\10\1\323"+
    "\3\10\52\0\2\324\25\0\1\324\42\0\1\140\1\325"+
    "\2\0\2\140\1\0\1\140\1\326\14\0\11\140\1\327"+
    "\1\330\3\0\1\140\74\0\2\331\25\0\1\331\26\0"+
    "\1\145\4\0\1\145\4\0\3\332\2\0\1\332\1\0"+
    "\1\333\3\0\1\145\12\0\1\332\2\0\4\332\7\0"+
    "\2\332\3\0\1\332\2\0\1\332\2\0\1\332\24\0"+
    "\3\10\6\0\3\10\2\0\2\10\3\0\3\10\10\0"+
    "\2\10\2\0\11\10\1\0\4\10\1\334\1\0\1\10"+
    "\1\0\15\10\14\0\3\10\6\0\3\10\2\0\2\10"+
    "\3\0\3\10\10\0\2\10\2\0\11\10\1\0\5\10"+
    "\1\0\1\10\1\0\5\10\1\335\7\10\14\0\3\10"+
    "\6\0\3\10\2\0\1\10\1\336\3\0\3\10\10\0"+
    "\2\10\2\0\1\10\1\337\7\10\1\0\5\10\1\0"+
    "\1\10\1\0\15\10\14\0\3\10\6\0\3\10\2\0"+
    "\2\10\3\0\3\10\10\0\2\10\2\0\11\10\1\0"+
    "\5\10\1\0\1\10\1\0\14\10\1\340\14\0\3\10"+
    "\6\0\3\10\2\0\2\10\3\0\3\10\10\0\2\10"+
    "\2\0\1\10\1\341\3\10\1\342\3\10\1\0\5\10"+
    "\1\0\1\10\1\0\2\10\1\343\12\10\14\0\3\10"+
    "\6\0\3\10\2\0\2\10\3\0\3\10\10\0\2\10"+
    "\2\0\11\10\1\0\5\10\1\0\1\10\1\0\6\10"+
    "\1\344\6\10\42\0\1\345\1\0\1\346\1\0\1\347"+
    "\1\0\1\350\162\0\1\351\114\0\1\352\45\0\1\353"+
    "\46\0\1\354\12\0\3\10\6\0\3\10\2\0\2\10"+
    "\3\0\3\10\10\0\2\10\2\0\11\10\1\0\4\10"+
    "\1\355\1\0\1\10\1\0\4\10\1\356\10\10\14\0"+
    "\3\10\6\0\3\10\2\0\2\10\3\0\1\10\1\357"+
    "\1\10\10\0\2\10\2\0\3\10\1\360\5\10\1\0"+
    "\5\10\1\0\1\10\1\0\1\10\1\361\1\362\12\10"+
    "\14\0\3\10\6\0\3\10\2\0\2\10\3\0\3\10"+
    "\10\0\2\10\2\0\4\10\1\363\4\10\1\0\5\10"+
    "\1\0\1\10\1\0\15\10\14\0\3\10\6\0\3\10"+
    "\2\0\2\10\3\0\3\10\10\0\2\10\2\0\7\10"+
    "\1\364\1\10\1\0\5\10\1\0\1\10\1\0\15\10"+
    "\54\0\1\365\67\0\1\366\1\367\2\0\2\166\1\0"+
    "\1\166\1\370\14\0\2\166\1\366\6\166\1\371\1\372"+
    "\3\0\1\366\40\0\1\170\7\0\2\170\26\0\1\170"+
    "\13\0\1\170\2\0\1\132\1\133\5\0\1\133\35\0"+
    "\3\373\2\0\1\373\20\0\1\373\2\0\4\373\7\0"+
    "\2\373\2\0\1\374\1\373\2\0\1\373\2\0\1\373"+
    "\26\0\1\375\37\0\1\375\13\0\1\375\36\0\3\10"+
    "\6\0\3\10\2\0\2\10\3\0\3\10\10\0\2\10"+
    "\2\0\11\10\1\0\5\10\1\0\1\10\1\0\1\10"+
    "\1\376\3\10\1\377\7\10\14\0\3\10\6\0\3\10"+
    "\2\0\2\10\3\0\3\10\10\0\2\10\2\0\1\10"+
    "\1\u0100\7\10\1\0\5\10\1\0\1\10\1\0\15\10"+
    "\14\0\3\10\6\0\3\10\2\0\2\10\3\0\3\10"+
    "\10\0\1\10\1\u0101\2\0\11\10\1\0\5\10\1\0"+
    "\1\10\1\0\15\10\14\0\3\10\6\0\3\10\2\0"+
    "\2\10\3\0\1\10\1\u0102\1\10\10\0\2\10\2\0"+
    "\11\10\1\0\5\10\1\0\1\10\1\0\15\10\14\0"+
    "\3\10\6\0\3\10\2\0\2\10\3\0\3\10\10\0"+
    "\2\10\2\0\11\10\1\0\4\10\1\u0103\1\0\1\10"+
    "\1\0\15\10\14\0\3\10\6\0\3\10\2\0\2\10"+
    "\3\0\3\10\10\0\2\10\2\0\11\10\1\0\5\10"+
    "\1\0\1\10\1\0\4\10\1\u0104\10\10\14\0\3\10"+
    "\6\0\3\10\2\0\2\10\3\0\1\10\1\u0105\1\10"+
    "\10\0\2\10\2\0\11\10\1\0\5\10\1\0\1\10"+
    "\1\0\15\10\14\0\3\10\6\0\3\10\2\0\2\10"+
    "\3\0\3\10\10\0\2\10\2\0\5\10\1\u0106\3\10"+
    "\1\0\5\10\1\0\1\10\1\0\15\10\14\0\3\10"+
    "\6\0\3\10\2\0\2\10\3\0\3\10\10\0\2\10"+
    "\2\0\11\10\1\0\5\10\1\0\1\10\1\0\6\10"+
    "\1\u0107\6\10\14\0\3\10\6\0\3\10\2\0\2\10"+
    "\3\0\3\10\10\0\2\10\2\0\11\10\1\0\5\10"+
    "\1\0\1\10\1\0\6\10\1\u0108\6\10\14\0\3\10"+
    "\6\0\3\10\2\0\2\10\3\0\3\10\10\0\2\10"+
    "\2\0\11\10\1\0\5\10\1\0\1\10\1\0\2\10"+
    "\1\u0109\12\10\14\0\3\10\6\0\3\10\2\0\2\10"+
    "\3\0\1\u010a\2\10\10\0\2\10\2\0\4\10\1\u010b"+
    "\4\10\1\0\5\10\1\0\1\10\1\0\15\10\14\0"+
    "\3\10\6\0\3\10\2\0\2\10\3\0\3\10\10\0"+
    "\2\10\2\0\11\10\1\0\5\10\1\0\1\10\1\0"+
    "\6\10\1\u010c\6\10\14\0\3\10\6\0\3\10\2\0"+
    "\1\10\1\u010d\3\0\3\10\10\0\2\10\2\0\11\10"+
    "\1\0\5\10\1\0\1\10\1\0\15\10\14\0\3\10"+
    "\6\0\3\10\2\0\2\10\3\0\3\10\10\0\2\10"+
    "\2\0\11\10\1\0\5\10\1\0\1\10\1\0\11\10"+
    "\1\u010e\3\10\14\0\3\10\6\0\3\10\2\0\2\10"+
    "\3\0\3\10\10\0\2\10\2\0\11\10\1\0\5\10"+
    "\1\0\1\10\1\0\2\10\1\u010f\12\10\14\0\3\10"+
    "\6\0\3\10\2\0\2\10\3\0\3\10\10\0\1\u0110"+
    "\1\10\2\0\11\10\1\0\5\10\1\0\1\10\1\0"+
    "\15\10\14\0\3\10\6\0\3\10\2\0\2\10\3\0"+
    "\3\10\10\0\2\10\2\0\7\10\1\u0111\1\10\1\0"+
    "\5\10\1\0\1\10\1\0\5\10\1\u0112\7\10\14\0"+
    "\3\10\6\0\3\10\2\0\2\10\3\0\3\10\10\0"+
    "\2\10\2\0\11\10\1\0\5\10\1\0\1\10\1\0"+
    "\12\10\1\u0113\2\10\14\0\3\10\6\0\3\10\2\0"+
    "\1\10\1\u0114\3\0\3\10\10\0\2\10\2\0\11\10"+
    "\1\0\4\10\1\u0115\1\0\1\10\1\0\15\10\14\0"+
    "\3\10\6\0\3\10\2\0\1\10\1\u0116\3\0\3\10"+
    "\10\0\2\10\2\0\11\10\1\0\5\10\1\0\1\10"+
    "\1\0\15\10\14\0\3\10\6\0\3\10\2\0\2\10"+
    "\3\0\3\10\10\0\2\10\2\0\11\10\1\0\4\10"+
    "\1\u0117\1\0\1\10\1\0\2\10\1\u0118\12\10\14\0"+
    "\3\10\6\0\3\10\2\0\2\10\3\0\3\10\10\0"+
    "\2\10\2\0\11\10\1\0\4\10\1\u0119\1\0\1\10"+
    "\1\0\10\10\1\u011a\4\10\14\0\3\10\6\0\3\10"+
    "\2\0\2\10\3\0\1\10\1\u011b\1\10\10\0\2\10"+
    "\2\0\11\10\1\0\5\10\1\0\1\10\1\0\1\10"+
    "\1\u011c\13\10\14\0\3\10\6\0\3\10\2\0\2\10"+
    "\3\0\3\10\10\0\2\10\2\0\4\10\1\u011d\4\10"+
    "\1\0\5\10\1\0\1\10\1\0\15\10\14\0\3\10"+
    "\6\0\3\10\2\0\2\10\3\0\3\10\10\0\2\10"+
    "\2\0\11\10\1\0\5\10\1\0\1\10\1\0\6\10"+
    "\1\u011e\6\10\14\0\3\10\6\0\3\10\2\0\2\10"+
    "\3\0\3\10\10\0\2\10\2\0\5\10\1\u011f\3\10"+
    "\1\0\5\10\1\0\1\10\1\0\15\10\14\0\3\10"+
    "\6\0\3\10\2\0\2\10\3\0\3\10\10\0\2\10"+
    "\2\0\11\10\1\0\5\10\1\0\1\10\1\0\12\10"+
    "\1\u0120\2\10\16\0\1\231\7\0\2\231\2\0\1\u0121"+
    "\23\0\1\231\2\0\1\u0121\6\0\1\u0121\1\0\1\231"+
    "\1\0\1\131\36\0\1\231\7\0\2\232\2\0\1\u0121"+
    "\23\0\1\232\2\0\1\u0121\6\0\1\u0121\1\0\1\232"+
    "\1\0\1\131\1\0\1\133\5\0\1\133\42\0\1\u0121"+
    "\26\0\1\u0121\6\0\1\u0121\3\0\1\131\1\0\1\133"+
    "\5\0\1\133\105\0\1\u0122\33\0\3\10\6\0\3\10"+
    "\2\0\2\10\3\0\1\10\1\u0123\1\10\10\0\2\10"+
    "\2\0\5\10\1\u0124\3\10\1\0\5\10\1\0\1\10"+
    "\1\0\15\10\14\0\3\10\6\0\3\10\2\0\2\10"+
    "\3\0\3\10\10\0\2\10\2\0\1\10\1\u0125\7\10"+
    "\1\0\5\10\1\0\1\10\1\0\15\10\14\0\3\10"+
    "\6\0\3\10\2\0\2\10\3\0\3\10\10\0\2\10"+
    "\2\0\4\10\1\u0126\4\10\1\0\5\10\1\0\1\10"+
    "\1\0\15\10\14\0\3\10\6\0\3\10\2\0\2\10"+
    "\3\0\3\10\10\0\2\10\2\0\1\10\1\u0127\7\10"+
    "\1\0\5\10\1\0\1\10\1\0\4\10\1\u0128\10\10"+
    "\14\0\3\10\6\0\3\10\2\0\2\10\3\0\3\10"+
    "\10\0\2\10\2\0\5\10\1\u0129\3\10\1\0\5\10"+
    "\1\0\1\10\1\0\15\10\14\0\3\10\6\0\3\10"+
    "\2\0\2\10\3\0\3\10\10\0\2\10\2\0\4\10"+
    "\1\u012a\4\10\1\0\5\10\1\0\1\10\1\0\1\10"+
    "\1\u012b\13\10\14\0\3\10\6\0\3\10\2\0\2\10"+
    "\3\0\3\10\10\0\2\10\2\0\11\10\1\0\5\10"+
    "\1\0\1\10\1\0\6\10\1\u012c\6\10\14\0\3\10"+
    "\6\0\3\10\2\0\2\10\3\0\3\10\10\0\2\10"+
    "\2\0\5\10\1\u012d\3\10\1\0\5\10\1\0\1\10"+
    "\1\0\15\10\14\0\3\10\6\0\3\10\2\0\2\10"+
    "\3\0\3\10\10\0\2\10\2\0\5\10\1\u012e\3\10"+
    "\1\0\5\10\1\0\1\10\1\0\15\10\14\0\3\10"+
    "\6\0\3\10\2\0\2\10\3\0\3\10\10\0\2\10"+
    "\2\0\5\10\1\u012f\3\10\1\0\5\10\1\0\1\10"+
    "\1\0\12\10\1\u0130\2\10\14\0\3\10\6\0\3\10"+
    "\2\0\2\10\3\0\3\10\10\0\2\10\2\0\7\10"+
    "\1\u0131\1\10\1\0\5\10\1\0\1\10\1\0\15\10"+
    "\14\0\3\10\6\0\3\10\2\0\2\10\3\0\3\10"+
    "\10\0\2\10\2\0\7\10\1\u0132\1\10\1\0\5\10"+
    "\1\0\1\10\1\0\15\10\14\0\3\10\6\0\3\10"+
    "\2\0\2\10\3\0\3\10\10\0\2\10\2\0\11\10"+
    "\1\0\5\10\1\0\1\10\1\0\4\10\1\u0133\10\10"+
    "\14\0\3\10\6\0\3\10\2\0\2\10\3\0\1\10"+
    "\1\u0134\1\10\10\0\2\10\2\0\11\10\1\0\5\10"+
    "\1\0\1\10\1\0\15\10\14\0\3\10\6\0\3\10"+
    "\2\0\2\10\3\0\3\10\10\0\2\10\2\0\11\10"+
    "\1\0\5\10\1\0\1\10\1\0\4\10\1\u0135\10\10"+
    "\14\0\3\10\6\0\3\10\2\0\2\10\3\0\3\10"+
    "\10\0\1\10\1\u0136\2\0\11\10\1\0\5\10\1\0"+
    "\1\10\1\0\15\10\14\0\3\10\6\0\3\10\2\0"+
    "\2\10\3\0\3\10\10\0\2\10\2\0\11\10\1\0"+
    "\5\10\1\0\1\10\1\0\13\10\1\u0137\1\10\14\0"+
    "\3\10\6\0\3\10\2\0\2\10\3\0\3\10\10\0"+
    "\2\10\2\0\11\10\1\0\5\10\1\0\1\10\1\0"+
    "\4\10\1\u0138\10\10\14\0\3\10\6\0\3\10\2\0"+
    "\2\10\3\0\3\10\10\0\2\10\2\0\5\10\1\u0139"+
    "\3\10\1\0\5\10\1\0\1\10\1\0\15\10\14\0"+
    "\3\10\6\0\3\10\2\0\2\10\3\0\3\10\10\0"+
    "\2\10\2\0\11\10\1\0\5\10\1\0\1\10\1\0"+
    "\4\10\1\u013a\10\10\14\0\3\10\6\0\3\10\2\0"+
    "\2\10\3\0\3\10\10\0\2\10\2\0\11\10\1\0"+
    "\4\10\1\u013b\1\0\1\10\1\0\6\10\1\u013c\6\10"+
    "\14\0\3\10\6\0\3\10\2\0\1\10\1\u013d\3\0"+
    "\3\10\10\0\2\10\2\0\11\10\1\0\5\10\1\0"+
    "\1\10\1\0\15\10\14\0\3\10\6\0\3\10\2\0"+
    "\2\10\3\0\3\10\10\0\2\10\2\0\2\10\1\u013e"+
    "\6\10\1\0\5\10\1\0\1\10\1\0\15\10\14\0"+
    "\3\10\6\0\3\10\2\0\2\10\3\0\3\10\10\0"+
    "\2\10\2\0\11\10\1\0\4\10\1\u013f\1\0\1\10"+
    "\1\0\15\10\116\0\1\u0140\12\0\3\10\6\0\3\10"+
    "\2\0\1\10\1\u0141\3\0\3\10\10\0\2\10\2\0"+
    "\11\10\1\0\5\10\1\0\1\10\1\0\15\10\16\0"+
    "\1\305\7\0\2\305\26\0\1\305\13\0\1\305\3\0"+
    "\1\133\5\0\1\133\30\0\1\307\212\0\1\u0142\14\0"+
    "\1\314\7\0\2\314\2\0\1\u0121\23\0\1\314\2\0"+
    "\1\u0121\6\0\1\u0121\1\0\1\314\1\0\1\131\1\0"+
    "\1\133\5\0\1\133\26\0\1\305\7\0\2\305\2\0"+
    "\1\u0121\23\0\1\305\2\0\1\u0121\6\0\1\u0121\1\0"+
    "\1\305\1\0\1\131\1\0\1\133\5\0\1\133\26\0"+
    "\1\231\7\0\2\231\26\0\1\231\13\0\1\231\74\0"+
    "\2\u0143\25\0\1\u0143\27\0\3\10\6\0\3\10\2\0"+
    "\2\10\3\0\3\10\10\0\1\10\1\u0144\2\0\11\10"+
    "\1\0\5\10\1\0\1\10\1\0\15\10\14\0\3\10"+
    "\6\0\3\10\2\0\2\10\3\0\3\10\10\0\2\10"+
    "\2\0\7\10\1\u0145\1\10\1\0\5\10\1\0\1\10"+
    "\1\0\15\10\14\0\3\10\6\0\3\10\2\0\2\10"+
    "\3\0\3\10\10\0\2\10\2\0\11\10\1\0\5\10"+
    "\1\0\1\10\1\0\6\10\1\u0146\6\10\14\0\1\u0147"+
    "\1\0\1\u0147\6\0\1\u0147\4\0\2\u0147\3\0\3\u0147"+
    "\10\0\2\u0147\3\0\10\u0147\1\0\2\u0147\1\0\2\u0147"+
    "\1\0\1\u0147\1\0\15\u0147\16\0\1\u0148\6\0\3\u0148"+
    "\2\0\1\u0148\20\0\1\u0148\2\0\4\u0148\7\0\2\u0148"+
    "\3\0\1\u0148\2\0\1\u0148\2\0\1\u0148\26\0\1\u0149"+
    "\6\0\3\u0149\2\0\1\u0149\20\0\1\u0149\2\0\4\u0149"+
    "\7\0\2\u0149\3\0\1\u0149\2\0\1\u0149\2\0\1\u0149"+
    "\26\0\1\u014a\6\0\3\u014a\2\0\1\u014a\20\0\1\u014a"+
    "\2\0\4\u014a\7\0\2\u014a\3\0\1\u014a\2\0\1\u014a"+
    "\2\0\1\u014a\35\0\3\145\2\0\1\145\20\0\1\145"+
    "\2\0\4\145\7\0\2\145\3\0\1\145\2\0\1\145"+
    "\2\0\1\145\62\0\2\u014b\25\0\1\u014b\27\0\3\10"+
    "\6\0\3\10\2\0\2\10\3\0\3\10\10\0\2\10"+
    "\2\0\5\10\1\u014c\3\10\1\0\5\10\1\0\1\10"+
    "\1\0\15\10\14\0\3\10\6\0\3\10\2\0\2\10"+
    "\3\0\3\10\10\0\2\10\2\0\5\10\1\u014d\3\10"+
    "\1\0\5\10\1\0\1\10\1\0\15\10\14\0\3\10"+
    "\6\0\3\10\2\0\2\10\3\0\3\10\10\0\2\10"+
    "\2\0\7\10\1\u014e\1\10\1\0\4\10\1\u014f\1\0"+
    "\1\10\1\0\15\10\14\0\3\10\6\0\3\10\2\0"+
    "\2\10\3\0\3\10\10\0\2\10\2\0\5\10\1\u0150"+
    "\3\10\1\0\5\10\1\0\1\10\1\0\1\10\1\u0151"+
    "\13\10\14\0\3\10\6\0\3\10\2\0\2\10\3\0"+
    "\3\10\10\0\2\10\2\0\11\10\1\0\5\10\1\0"+
    "\1\10\1\0\4\10\1\u0152\10\10\14\0\3\10\6\0"+
    "\3\10\2\0\2\10\3\0\3\10\10\0\2\10\2\0"+
    "\11\10\1\0\5\10\1\0\1\10\1\0\2\10\1\u0153"+
    "\12\10\14\0\3\10\6\0\3\10\2\0\2\10\3\0"+
    "\3\10\10\0\2\10\2\0\11\10\1\0\5\10\1\0"+
    "\1\10\1\0\4\10\1\u0154\10\10\14\0\3\10\6\0"+
    "\3\10\2\0\1\10\1\u0155\3\0\3\10\10\0\2\10"+
    "\2\0\11\10\1\0\5\10\1\0\1\10\1\0\15\10"+
    "\11\0\32\345\1\u0156\62\345\34\346\1\u0157\60\346\36\347"+
    "\1\u0158\56\347\40\350\1\u0159\54\350\105\0\1\u015a\12\0"+
    "\3\10\6\0\3\10\2\0\2\10\3\0\3\10\10\0"+
    "\2\10\2\0\11\10\1\0\5\10\1\0\1\10\1\0"+
    "\2\10\1\u015b\12\10\14\0\3\10\6\0\3\10\2\0"+
    "\1\10\1\u015c\3\0\3\10\10\0\2\10\2\0\4\10"+
    "\1\u015d\4\10\1\0\5\10\1\0\1\10\1\0\15\10"+
    "\14\0\3\10\6\0\3\10\2\0\2\10\3\0\3\10"+
    "\10\0\2\10\2\0\11\10\1\0\5\10\1\0\1\10"+
    "\1\0\1\10\1\u015e\13\10\14\0\3\10\6\0\3\10"+
    "\2\0\2\10\3\0\3\10\10\0\2\10\2\0\1\10"+
    "\1\u015f\7\10\1\0\5\10\1\0\1\10\1\0\15\10"+
    "\14\0\3\10\6\0\3\10\2\0\2\10\3\0\3\10"+
    "\10\0\2\10\2\0\11\10\1\0\4\10\1\u0160\1\0"+
    "\1\10\1\0\15\10\14\0\3\10\6\0\3\10\2\0"+
    "\2\10\3\0\3\10\10\0\2\10\2\0\11\10\1\0"+
    "\5\10\1\0\1\10\1\0\4\10\1\u0161\10\10\14\0"+
    "\3\10\6\0\3\10\2\0\2\10\3\0\3\10\10\0"+
    "\2\10\2\0\1\10\1\u0162\7\10\1\0\5\10\1\0"+
    "\1\10\1\0\15\10\14\0\3\10\6\0\3\10\2\0"+
    "\2\10\3\0\3\10\10\0\2\10\2\0\2\10\1\u0163"+
    "\6\10\1\0\5\10\1\0\1\10\1\0\15\10\27\0"+
    "\1\u0164\24\0\1\365\1\0\1\u0164\13\0\1\u0164\36\0"+
    "\1\u0165\1\0\1\u0165\6\0\1\u0165\4\0\2\u0165\3\0"+
    "\3\u0165\10\0\2\u0165\3\0\10\u0165\1\0\2\u0165\1\0"+
    "\2\u0165\1\0\1\u0165\1\0\15\u0165\16\0\1\u0166\6\0"+
    "\3\u0166\2\0\1\u0166\20\0\1\u0166\2\0\4\u0166\7\0"+
    "\2\u0166\3\0\1\u0166\2\0\1\u0166\2\0\1\u0166\26\0"+
    "\1\u0167\6\0\3\u0167\2\0\1\u0167\20\0\1\u0167\2\0"+
    "\4\u0167\7\0\2\u0167\3\0\1\u0167\2\0\1\u0167\2\0"+
    "\1\u0167\26\0\1\u0168\6\0\3\u0168\2\0\1\u0168\20\0"+
    "\1\u0168\2\0\4\u0168\7\0\2\u0168\3\0\1\u0168\2\0"+
    "\1\u0168\2\0\1\u0168\26\0\1\u0169\6\0\3\373\2\0"+
    "\1\373\20\0\1\373\2\0\4\373\3\0\2\127\1\0"+
    "\1\130\2\373\1\0\1\131\1\374\1\373\1\0\1\u016a"+
    "\1\373\2\0\1\373\5\0\1\u016a\27\0\3\u016b\2\0"+
    "\1\u016b\20\0\1\u016b\2\0\4\u016b\7\0\2\u016b\3\0"+
    "\1\u016b\2\0\1\u016b\2\0\1\u016b\26\0\1\375\13\0"+
    "\1\126\23\0\1\375\2\0\1\126\3\0\2\127\1\0"+
    "\1\130\1\0\1\375\1\0\1\131\34\0\3\10\6\0"+
    "\3\10\2\0\2\10\3\0\3\10\10\0\2\10\2\0"+
    "\11\10\1\0\5\10\1\0\1\10\1\0\4\10\1\u016c"+
    "\10\10\14\0\3\10\6\0\3\10\2\0\2\10\3\0"+
    "\3\10\10\0\2\10\2\0\4\10\1\u016d\4\10\1\0"+
    "\5\10\1\0\1\10\1\0\15\10\14\0\3\10\6\0"+
    "\3\10\2\0\2\10\3\0\3\10\10\0\2\10\2\0"+
    "\11\10\1\0\4\10\1\u016e\1\0\1\10\1\0\15\10"+
    "\14\0\3\10\6\0\3\10\2\0\2\10\3\0\3\10"+
    "\10\0\2\10\2\0\5\10\1\u016f\3\10\1\0\5\10"+
    "\1\0\1\10\1\0\15\10\14\0\3\10\6\0\3\10"+
    "\2\0\2\10\3\0\3\10\10\0\2\10\2\0\1\10"+
    "\1\u0170\7\10\1\0\5\10\1\0\1\10\1\0\15\10"+
    "\14\0\3\10\6\0\3\10\2\0\2\10\3\0\3\10"+
    "\10\0\2\10\2\0\1\10\1\u0171\7\10\1\0\5\10"+
    "\1\0\1\10\1\0\15\10\14\0\3\10\6\0\3\10"+
    "\2\0\2\10\3\0\3\10\10\0\2\10\2\0\11\10"+
    "\1\0\5\10\1\0\1\10\1\0\4\10\1\u0172\10\10"+
    "\14\0\3\10\6\0\3\10\2\0\2\10\3\0\3\10"+
    "\10\0\2\10\2\0\11\10\1\0\5\10\1\0\1\10"+
    "\1\0\4\10\1\u0173\10\10\14\0\3\10\6\0\3\10"+
    "\2\0\2\10\3\0\3\10\10\0\2\10\2\0\11\10"+
    "\1\0\5\10\1\0\1\10\1\0\2\10\1\u0174\12\10"+
    "\14\0\3\10\6\0\3\10\2\0\2\10\3\0\3\10"+
    "\10\0\2\10\2\0\11\10\1\0\5\10\1\0\1\10"+
    "\1\0\11\10\1\u0175\3\10\14\0\3\10\6\0\3\10"+
    "\2\0\2\10\3\0\1\10\1\u0176\1\10\10\0\2\10"+
    "\2\0\11\10\1\0\5\10\1\0\1\10\1\0\15\10"+
    "\14\0\3\10\6\0\3\10\2\0\2\10\3\0\3\10"+
    "\10\0\2\10\2\0\11\10\1\0\5\10\1\0\1\10"+
    "\1\0\4\10\1\u0177\10\10\14\0\3\10\6\0\3\10"+
    "\2\0\2\10\3\0\3\10\10\0\2\10\2\0\1\10"+
    "\1\u0178\7\10\1\0\5\10\1\0\1\10\1\0\15\10"+
    "\14\0\3\10\6\0\3\10\2\0\2\10\3\0\3\10"+
    "\10\0\2\10\2\0\1\10\1\u0179\7\10\1\0\5\10"+
    "\1\0\1\10\1\0\15\10\14\0\3\10\6\0\3\10"+
    "\2\0\2\10\3\0\3\10\10\0\2\10\2\0\11\10"+
    "\1\0\5\10\1\0\1\10\1\0\4\10\1\u017a\10\10"+
    "\14\0\3\10\6\0\3\10\2\0\2\10\3\0\3\10"+
    "\10\0\2\10\2\0\11\10\1\0\5\10\1\0\1\10"+
    "\1\0\4\10\1\u017b\10\10\14\0\3\10\6\0\3\10"+
    "\2\0\2\10\3\0\3\10\10\0\2\10\2\0\11\10"+
    "\1\0\5\10\1\0\1\10\1\0\2\10\1\u017c\12\10"+
    "\14\0\3\10\6\0\3\10\2\0\2\10\3\0\3\10"+
    "\10\0\2\10\2\0\11\10\1\0\5\10\1\0\1\10"+
    "\1\0\4\10\1\u017d\10\10\14\0\3\10\6\0\3\10"+
    "\2\0\2\10\3\0\3\10\10\0\2\10\2\0\11\10"+
    "\1\0\5\10\1\0\1\10\1\0\4\10\1\u017e\10\10"+
    "\14\0\3\10\6\0\3\10\2\0\2\10\3\0\3\10"+
    "\10\0\2\10\2\0\11\10\1\0\5\10\1\0\1\10"+
    "\1\0\6\10\1\u017f\6\10\14\0\3\10\6\0\3\10"+
    "\2\0\2\10\3\0\1\10\1\u0180\1\10\10\0\2\10"+
    "\2\0\11\10\1\0\5\10\1\0\1\10\1\0\15\10"+
    "\14\0\3\10\6\0\3\10\2\0\2\10\3\0\3\10"+
    "\10\0\2\10\2\0\5\10\1\u0181\3\10\1\0\5\10"+
    "\1\0\1\10\1\0\15\10\14\0\3\10\6\0\3\10"+
    "\2\0\2\10\3\0\3\10\10\0\1\10\1\u0182\2\0"+
    "\11\10\1\0\5\10\1\0\1\10\1\0\15\10\14\0"+
    "\3\10\6\0\3\10\2\0\2\10\3\0\3\10\10\0"+
    "\2\10\2\0\1\10\1\u0183\7\10\1\0\5\10\1\0"+
    "\1\10\1\0\15\10\14\0\3\10\6\0\3\10\2\0"+
    "\2\10\3\0\3\10\10\0\2\10\2\0\4\10\1\u0184"+
    "\4\10\1\0\5\10\1\0\1\10\1\0\15\10\14\0"+
    "\3\10\6\0\3\10\2\0\2\10\3\0\3\10\10\0"+
    "\2\10\2\0\11\10\1\0\5\10\1\0\1\10\1\0"+
    "\6\10\1\u0185\6\10\14\0\3\10\6\0\3\10\2\0"+
    "\2\10\3\0\3\10\10\0\2\10\2\0\1\10\1\u0186"+
    "\7\10\1\0\5\10\1\0\1\10\1\0\15\10\14\0"+
    "\3\10\6\0\3\10\2\0\2\10\3\0\3\10\10\0"+
    "\2\10\2\0\11\10\1\0\5\10\1\0\1\10\1\0"+
    "\10\10\1\u0187\4\10\14\0\3\10\6\0\3\10\2\0"+
    "\2\10\3\0\3\10\10\0\2\10\2\0\5\10\1\u0188"+
    "\3\10\1\0\5\10\1\0\1\10\1\0\15\10\14\0"+
    "\3\10\6\0\3\10\2\0\2\10\3\0\3\10\10\0"+
    "\2\10\2\0\4\10\1\u0189\4\10\1\0\5\10\1\0"+
    "\1\10\1\0\15\10\14\0\3\10\6\0\3\10\2\0"+
    "\2\10\3\0\3\10\10\0\2\10\2\0\11\10\1\0"+
    "\5\10\1\0\1\10\1\0\4\10\1\u018a\1\10\1\u018b"+
    "\6\10\14\0\3\10\6\0\3\10\2\0\2\10\3\0"+
    "\3\10\10\0\2\10\2\0\11\10\1\0\5\10\1\0"+
    "\1\10\1\0\2\10\1\u018c\12\10\14\0\3\10\6\0"+
    "\3\10\2\0\2\10\3\0\3\10\10\0\2\10\2\0"+
    "\11\10\1\0\5\10\1\0\1\10\1\0\4\10\1\u018d"+
    "\10\10\14\0\3\10\6\0\3\10\2\0\2\10\3\0"+
    "\3\10\10\0\2\10\2\0\11\10\1\0\5\10\1\0"+
    "\1\10\1\0\1\10\1\u018e\13\10\14\0\3\10\6\0"+
    "\3\10\2\0\2\10\3\0\1\10\1\u018f\1\10\10\0"+
    "\2\10\2\0\11\10\1\0\5\10\1\0\1\10\1\0"+
    "\15\10\14\0\3\10\6\0\3\10\2\0\2\10\3\0"+
    "\1\10\1\u0190\1\10\10\0\2\10\2\0\5\10\1\u0191"+
    "\3\10\1\0\5\10\1\0\1\10\1\0\15\10\14\0"+
    "\3\10\6\0\3\10\2\0\1\10\1\u0192\3\0\3\10"+
    "\10\0\2\10\2\0\11\10\1\0\5\10\1\0\1\10"+
    "\1\0\15\10\14\0\3\10\6\0\3\10\2\0\2\10"+
    "\3\0\3\10\10\0\2\10\2\0\11\10\1\0\5\10"+
    "\1\0\1\10\1\0\1\10\1\u0193\13\10\14\0\3\10"+
    "\6\0\3\10\2\0\2\10\3\0\3\10\10\0\2\10"+
    "\2\0\11\10\1\0\5\10\1\0\1\10\1\0\3\10"+
    "\1\u0194\11\10\14\0\3\10\6\0\3\10\2\0\2\10"+
    "\3\0\3\10\10\0\2\10\2\0\11\10\1\0\5\10"+
    "\1\0\1\10\1\0\7\10\1\u0195\5\10\14\0\3\10"+
    "\6\0\3\10\2\0\2\10\3\0\3\10\10\0\2\10"+
    "\2\0\7\10\1\u0196\1\10\1\0\5\10\1\0\1\10"+
    "\1\0\15\10\14\0\3\10\6\0\3\10\2\0\2\10"+
    "\3\0\3\10\10\0\2\10\2\0\11\10\1\0\5\10"+
    "\1\0\1\10\1\0\6\10\1\u0197\6\10\14\0\3\10"+
    "\6\0\3\10\2\0\2\10\3\0\3\10\10\0\2\10"+
    "\2\0\11\10\1\0\5\10\1\0\1\10\1\0\4\10"+
    "\1\u0198\10\10\14\0\3\10\6\0\3\10\2\0\2\10"+
    "\3\0\3\10\10\0\2\10\2\0\11\10\1\0\5\10"+
    "\1\0\1\10\1\0\2\10\1\u0199\12\10\14\0\3\10"+
    "\6\0\3\10\2\0\2\10\3\0\3\10\10\0\2\10"+
    "\2\0\1\10\1\u019a\7\10\1\0\5\10\1\0\1\10"+
    "\1\0\15\10\14\0\3\10\6\0\3\10\2\0\2\10"+
    "\3\0\3\10\10\0\2\10\2\0\11\10\1\0\5\10"+
    "\1\0\1\10\1\0\11\10\1\u019b\3\10\14\0\3\10"+
    "\6\0\3\10\2\0\2\10\3\0\3\10\10\0\2\10"+
    "\2\0\4\10\1\u019c\4\10\1\0\5\10\1\0\1\10"+
    "\1\0\15\10\14\0\3\10\6\0\3\10\2\0\2\10"+
    "\3\0\3\10\10\0\2\10\2\0\11\10\1\0\5\10"+
    "\1\0\1\10\1\0\4\10\1\u019d\10\10\14\0\3\10"+
    "\6\0\3\10\2\0\2\10\3\0\3\10\10\0\2\10"+
    "\2\0\11\10\1\0\5\10\1\0\1\10\1\0\2\10"+
    "\1\u019e\12\10\14\0\3\10\6\0\3\10\2\0\2\10"+
    "\3\0\3\10\10\0\2\10\2\0\11\10\1\0\5\10"+
    "\1\0\1\10\1\0\4\10\1\u019f\10\10\14\0\3\10"+
    "\6\0\3\10\2\0\2\10\3\0\3\10\10\0\2\10"+
    "\2\0\11\10\1\0\5\10\1\0\1\10\1\0\4\10"+
    "\1\u01a0\10\10\14\0\3\10\6\0\3\10\2\0\1\10"+
    "\1\u01a1\3\0\3\10\10\0\2\10\2\0\11\10\1\0"+
    "\5\10\1\0\1\10\1\0\15\10\14\0\3\10\6\0"+
    "\3\10\2\0\1\10\1\u01a2\3\0\3\10\10\0\2\10"+
    "\2\0\11\10\1\0\5\10\1\0\1\10\1\0\15\10"+
    "\14\0\3\10\6\0\3\10\2\0\2\10\3\0\3\10"+
    "\10\0\2\10\2\0\6\10\1\u01a3\2\10\1\0\5\10"+
    "\1\0\1\10\1\0\15\10\14\0\3\10\6\0\3\10"+
    "\2\0\2\10\3\0\3\10\10\0\2\10\2\0\5\10"+
    "\1\u01a4\3\10\1\0\5\10\1\0\1\10\1\0\15\10"+
    "\14\0\3\10\6\0\3\10\2\0\2\10\3\0\3\10"+
    "\10\0\2\10\2\0\1\10\1\u01a5\3\10\1\u01a6\3\10"+
    "\1\0\5\10\1\0\1\10\1\0\15\10\14\0\3\10"+
    "\6\0\3\10\2\0\2\10\3\0\3\10\10\0\2\10"+
    "\2\0\11\10\1\0\5\10\1\0\1\10\1\0\2\10"+
    "\1\u01a7\12\10\14\0\3\10\6\0\3\10\2\0\2\10"+
    "\3\0\3\10\10\0\2\10\2\0\4\10\1\u01a8\4\10"+
    "\1\0\5\10\1\0\1\10\1\0\15\10\14\0\3\10"+
    "\6\0\3\10\2\0\2\10\3\0\3\10\10\0\2\10"+
    "\2\0\11\10\1\0\5\10\1\0\1\10\1\0\3\10"+
    "\1\u01a9\11\10\14\0\3\10\6\0\3\10\2\0\2\10"+
    "\3\0\3\10\10\0\2\10\2\0\11\10\1\0\5\10"+
    "\1\0\1\10\1\0\6\10\1\u01aa\6\10\14\0\3\10"+
    "\6\0\3\10\2\0\1\10\1\u01ab\3\0\3\10\10\0"+
    "\2\10\2\0\11\10\1\0\5\10\1\0\1\10\1\0"+
    "\15\10\14\0\3\10\6\0\3\10\2\0\2\10\3\0"+
    "\3\10\10\0\2\10\2\0\6\10\1\u01ac\2\10\1\0"+
    "\5\10\1\0\1\10\1\0\15\10\14\0\3\u0147\6\0"+
    "\3\u0147\1\0\1\u01ad\2\u0147\3\0\3\u0147\10\0\2\u0147"+
    "\2\0\11\u0147\1\0\5\u0147\1\0\1\u0147\1\0\15\u0147"+
    "\16\0\1\140\6\0\3\140\2\0\1\140\20\0\1\140"+
    "\2\0\4\140\7\0\2\140\3\0\1\140\2\0\1\140"+
    "\2\0\1\140\26\0\1\326\6\0\3\326\2\0\1\326"+
    "\20\0\1\326\2\0\4\326\7\0\2\326\3\0\1\326"+
    "\2\0\1\326\2\0\1\326\26\0\1\u01ae\6\0\3\u01ae"+
    "\2\0\1\u01ae\20\0\1\u01ae\2\0\4\u01ae\7\0\2\u01ae"+
    "\3\0\1\u01ae\2\0\1\u01ae\2\0\1\u01ae\24\0\3\10"+
    "\6\0\3\10\2\0\2\10\3\0\3\10\10\0\2\10"+
    "\2\0\11\10\1\0\5\10\1\0\1\10\1\0\1\10"+
    "\1\u01af\13\10\14\0\3\10\6\0\3\10\2\0\2\10"+
    "\3\0\3\10\10\0\2\10\2\0\11\10\1\0\5\10"+
    "\1\0\1\10\1\0\4\10\1\u01b0\10\10\14\0\3\10"+
    "\6\0\3\10\2\0\2\10\3\0\3\10\10\0\2\10"+
    "\2\0\11\10\1\0\5\10\1\0\1\10\1\0\1\10"+
    "\1\u01b1\13\10\14\0\3\10\6\0\3\10\2\0\2\10"+
    "\3\0\3\10\10\0\2\10\2\0\4\10\1\u01b2\4\10"+
    "\1\0\5\10\1\0\1\10\1\0\15\10\14\0\3\10"+
    "\6\0\3\10\2\0\2\10\3\0\3\10\10\0\2\10"+
    "\2\0\11\10\1\0\4\10\1\u01b3\1\0\1\10\1\0"+
    "\15\10\14\0\3\10\6\0\3\10\2\0\2\10\3\0"+
    "\3\10\10\0\2\10\2\0\11\10\1\0\5\10\1\0"+
    "\1\10\1\0\7\10\1\u01b4\5\10\14\0\3\10\6\0"+
    "\3\10\2\0\2\10\3\0\3\10\10\0\2\10\2\0"+
    "\11\10\1\0\5\10\1\0\1\10\1\0\6\10\1\u01b5"+
    "\6\10\14\0\3\10\6\0\3\10\2\0\2\10\3\0"+
    "\3\10\10\0\2\10\2\0\11\10\1\0\5\10\1\0"+
    "\1\10\1\0\4\10\1\u01b6\10\10\14\0\3\10\6\0"+
    "\3\10\2\0\2\10\3\0\3\10\10\0\2\10\2\0"+
    "\11\10\1\0\5\10\1\0\1\10\1\0\1\10\1\u01b7"+
    "\13\10\14\0\3\10\6\0\3\10\2\0\2\10\3\0"+
    "\3\10\10\0\2\10\2\0\5\10\1\u01b8\3\10\1\0"+
    "\5\10\1\0\1\10\1\0\15\10\11\0\23\345\1\u01b9"+
    "\71\345\23\346\1\u01b9\71\346\23\347\1\u01b9\71\347\23\350"+
    "\1\u01b9\71\350\3\0\3\10\6\0\3\10\2\0\2\10"+
    "\3\0\3\10\10\0\2\10\2\0\11\10\1\0\5\10"+
    "\1\0\1\10\1\0\4\10\1\u01ba\10\10\14\0\3\10"+
    "\6\0\3\10\2\0\2\10\3\0\3\10\10\0\2\10"+
    "\2\0\11\10\1\0\5\10\1\0\1\10\1\0\4\10"+
    "\1\u01bb\10\10\14\0\3\10\6\0\3\10\2\0\2\10"+
    "\3\0\3\10\10\0\2\10\2\0\11\10\1\0\5\10"+
    "\1\0\1\10\1\0\4\10\1\u01bc\10\10\14\0\3\10"+
    "\6\0\3\10\2\0\2\10\3\0\3\10\10\0\2\10"+
    "\2\0\7\10\1\u01bd\1\10\1\0\5\10\1\0\1\10"+
    "\1\0\15\10\14\0\3\10\6\0\3\10\2\0\2\10"+
    "\3\0\3\10\10\0\2\10\2\0\11\10\1\0\5\10"+
    "\1\0\1\10\1\0\11\10\1\u01be\3\10\14\0\3\10"+
    "\6\0\3\10\2\0\2\10\3\0\3\10\10\0\2\10"+
    "\2\0\11\10\1\0\5\10\1\0\1\10\1\0\3\10"+
    "\1\u01bf\11\10\14\0\3\10\6\0\3\10\2\0\2\10"+
    "\3\0\3\10\10\0\2\10\2\0\11\10\1\0\5\10"+
    "\1\0\1\10\1\0\11\10\1\u01c0\3\10\14\0\3\10"+
    "\6\0\3\10\2\0\2\10\3\0\3\10\10\0\2\10"+
    "\2\0\11\10\1\0\5\10\1\0\1\10\1\0\2\10"+
    "\1\u01c1\12\10\27\0\1\166\24\0\1\365\1\0\1\166"+
    "\13\0\1\166\36\0\3\u0165\6\0\3\u0165\1\0\1\u01c2"+
    "\2\u0165\3\0\3\u0165\10\0\2\u0165\2\0\11\u0165\1\0"+
    "\5\u0165\1\0\1\u0165\1\0\15\u0165\16\0\1\166\6\0"+
    "\3\166\2\0\1\166\20\0\1\166\2\0\4\166\7\0"+
    "\2\166\3\0\1\166\2\0\1\166\2\0\1\166\26\0"+
    "\1\370\6\0\3\370\2\0\1\370\20\0\1\370\2\0"+
    "\4\370\7\0\2\370\3\0\1\370\2\0\1\370\2\0"+
    "\1\370\26\0\1\u01c3\6\0\3\u01c3\2\0\1\u01c3\20\0"+
    "\1\u01c3\2\0\4\u01c3\7\0\2\u01c3\3\0\1\u01c3\2\0"+
    "\1\u01c3\2\0\1\u01c3\26\0\1\u0169\6\0\3\u0169\2\0"+
    "\1\u0169\20\0\1\u0169\2\0\4\u0169\3\0\2\127\1\0"+
    "\1\130\2\u0169\1\0\1\131\1\0\1\u0169\2\0\1\u0169"+
    "\2\0\1\u0169\34\0\1\u01c4\1\0\2\u01c5\26\0\1\u01c5"+
    "\13\0\1\u01c5\4\0\1\u01c4\42\0\3\u016b\2\0\1\u016b"+
    "\20\0\1\u016b\2\0\4\u016b\7\0\2\u016b\3\0\1\u016b"+
    "\1\0\1\u016a\1\u016b\2\0\1\u016b\5\0\1\u016a\16\0"+
    "\3\10\6\0\3\10\2\0\2\10\3\0\3\10\10\0"+
    "\2\10\2\0\4\10\1\u01c6\4\10\1\0\5\10\1\0"+
    "\1\10\1\0\15\10\14\0\3\10\6\0\3\10\2\0"+
    "\2\10\3\0\3\10\10\0\2\10\2\0\11\10\1\0"+
    "\5\10\1\0\1\10\1\0\1\10\1\u01c7\13\10\14\0"+
    "\3\10\6\0\3\10\2\0\2\10\3\0\3\10\10\0"+
    "\2\10\2\0\5\10\1\u01c8\3\10\1\0\5\10\1\0"+
    "\1\10\1\0\15\10\14\0\3\10\6\0\3\10\2\0"+
    "\1\10\1\u01c9\3\0\3\10\10\0\2\10\2\0\11\10"+
    "\1\0\5\10\1\0\1\10\1\0\15\10\14\0\3\10"+
    "\6\0\3\10\2\0\2\10\3\0\1\10\1\u01ca\1\10"+
    "\10\0\2\10\2\0\11\10\1\0\5\10\1\0\1\10"+
    "\1\0\15\10\14\0\3\10\6\0\3\10\2\0\2\10"+
    "\3\0\3\10\10\0\2\10\2\0\11\10\1\0\5\10"+
    "\1\0\1\10\1\0\7\10\1\u01cb\5\10\14\0\3\10"+
    "\6\0\3\10\2\0\2\10\3\0\3\10\10\0\2\10"+
    "\2\0\11\10\1\0\5\10\1\0\1\10\1\0\4\10"+
    "\1\u01cc\10\10\14\0\3\10\6\0\3\10\2\0\2\10"+
    "\3\0\3\10\10\0\1\10\1\u01cd\2\0\11\10\1\0"+
    "\5\10\1\0\1\10\1\0\15\10\14\0\3\10\6\0"+
    "\3\10\2\0\2\10\3\0\3\10\10\0\2\10\2\0"+
    "\11\10\1\0\5\10\1\0\1\10\1\0\2\10\1\u01ce"+
    "\12\10\14\0\3\10\6\0\3\10\2\0\2\10\3\0"+
    "\3\10\10\0\2\10\2\0\5\10\1\u01cf\3\10\1\0"+
    "\5\10\1\0\1\10\1\0\15\10\14\0\3\10\6\0"+
    "\3\10\2\0\2\10\3\0\3\10\10\0\2\10\2\0"+
    "\1\10\1\u01d0\7\10\1\0\5\10\1\0\1\10\1\0"+
    "\15\10\14\0\3\10\6\0\3\10\2\0\2\10\3\0"+
    "\1\10\1\u01d1\1\10\10\0\2\10\2\0\11\10\1\0"+
    "\5\10\1\0\1\10\1\0\6\10\1\u01d2\6\10\14\0"+
    "\3\10\6\0\3\10\2\0\2\10\3\0\3\10\10\0"+
    "\2\10\2\0\11\10\1\0\5\10\1\0\1\10\1\0"+
    "\6\10\1\u01d3\6\10\14\0\3\10\6\0\3\10\2\0"+
    "\2\10\3\0\3\10\10\0\1\u01d4\1\10\2\0\11\10"+
    "\1\0\5\10\1\0\1\10\1\0\15\10\14\0\3\10"+
    "\6\0\3\10\2\0\2\10\3\0\3\10\10\0\2\10"+
    "\2\0\7\10\1\u01d5\1\10\1\0\5\10\1\0\1\10"+
    "\1\0\15\10\14\0\3\10\6\0\3\10\2\0\2\10"+
    "\3\0\3\10\10\0\2\10\2\0\5\10\1\u01d6\3\10"+
    "\1\0\5\10\1\0\1\10\1\0\15\10\14\0\3\10"+
    "\6\0\3\10\2\0\2\10\3\0\3\10\10\0\2\10"+
    "\2\0\11\10\1\0\5\10\1\0\1\10\1\0\3\10"+
    "\1\u01d7\11\10\14\0\3\10\6\0\3\10\2\0\1\10"+
    "\1\u01d8\3\0\3\10\10\0\2\10\2\0\11\10\1\0"+
    "\5\10\1\0\1\10\1\0\15\10\14\0\3\10\6\0"+
    "\3\10\2\0\2\10\3\0\3\10\10\0\2\10\2\0"+
    "\3\10\1\u01d9\5\10\1\0\5\10\1\0\1\10\1\0"+
    "\15\10\14\0\3\10\6\0\3\10\2\0\2\10\3\0"+
    "\3\10\10\0\2\10\2\0\11\10\1\0\5\10\1\0"+
    "\1\10\1\0\4\10\1\u01da\10\10\14\0\3\10\6\0"+
    "\3\10\2\0\2\10\3\0\3\10\10\0\2\10\2\0"+
    "\11\10\1\0\5\10\1\0\1\10\1\0\3\10\1\u01db"+
    "\11\10\14\0\3\10\6\0\3\10\2\0\1\10\1\u01dc"+
    "\3\0\3\10\10\0\2\10\2\0\11\10\1\0\5\10"+
    "\1\0\1\10\1\0\15\10\14\0\3\10\6\0\3\10"+
    "\2\0\2\10\3\0\3\10\10\0\2\10\2\0\11\10"+
    "\1\0\4\10\1\u01dd\1\0\1\10\1\0\15\10\14\0"+
    "\3\10\6\0\3\10\2\0\2\10\3\0\3\10\10\0"+
    "\2\10\2\0\11\10\1\0\5\10\1\0\1\10\1\0"+
    "\10\10\1\u01de\4\10\14\0\3\10\6\0\3\10\2\0"+
    "\2\10\3\0\1\10\1\u01df\1\10\10\0\2\10\2\0"+
    "\11\10\1\0\5\10\1\0\1\10\1\0\15\10\14\0"+
    "\3\10\6\0\3\10\2\0\2\10\3\0\3\10\10\0"+
    "\2\10\2\0\5\10\1\u01e0\3\10\1\0\5\10\1\0"+
    "\1\10\1\0\15\10\14\0\3\10\6\0\3\10\2\0"+
    "\2\10\3\0\3\10\10\0\2\10\2\0\11\10\1\0"+
    "\4\10\1\u01e1\1\0\1\10\1\0\15\10\14\0\3\10"+
    "\6\0\3\10\2\0\2\10\3\0\3\10\10\0\2\10"+
    "\2\0\11\10\1\0\5\10\1\0\1\10\1\0\7\10"+
    "\1\u01e2\5\10\14\0\3\10\6\0\3\10\2\0\2\10"+
    "\3\0\3\10\10\0\2\10\2\0\11\10\1\0\5\10"+
    "\1\0\1\10\1\0\12\10\1\u01e3\2\10\14\0\3\10"+
    "\6\0\3\10\2\0\1\10\1\u01e4\3\0\3\10\10\0"+
    "\2\10\2\0\11\10\1\0\5\10\1\0\1\10\1\0"+
    "\15\10\14\0\3\10\6\0\3\10\2\0\2\10\3\0"+
    "\3\10\10\0\2\10\2\0\11\10\1\0\4\10\1\u01e5"+
    "\1\0\1\10\1\0\15\10\14\0\3\10\6\0\3\10"+
    "\2\0\2\10\3\0\3\10\10\0\2\10\2\0\11\10"+
    "\1\0\5\10\1\0\1\10\1\0\2\10\1\u01e6\12\10"+
    "\14\0\3\10\6\0\3\10\2\0\2\10\3\0\3\10"+
    "\10\0\2\10\2\0\5\10\1\u01e7\3\10\1\0\5\10"+
    "\1\0\1\10\1\0\15\10\14\0\3\10\6\0\3\10"+
    "\2\0\2\10\3\0\3\10\10\0\1\10\1\u01e8\2\0"+
    "\11\10\1\0\5\10\1\0\1\10\1\0\15\10\14\0"+
    "\3\10\6\0\3\10\2\0\1\10\1\u01e9\3\0\3\10"+
    "\10\0\2\10\2\0\11\10\1\0\5\10\1\0\1\10"+
    "\1\0\15\10\14\0\3\10\6\0\3\10\2\0\2\10"+
    "\3\0\3\10\10\0\2\10\2\0\11\10\1\0\5\10"+
    "\1\0\1\10\1\0\1\10\1\u01ea\13\10\14\0\3\10"+
    "\6\0\3\10\2\0\1\10\1\u01eb\3\0\3\10\10\0"+
    "\2\10\2\0\11\10\1\0\5\10\1\0\1\10\1\0"+
    "\15\10\14\0\3\10\6\0\3\10\2\0\2\10\3\0"+
    "\3\10\10\0\2\10\2\0\1\10\1\u01ec\7\10\1\0"+
    "\5\10\1\0\1\10\1\0\15\10\14\0\3\10\6\0"+
    "\3\10\2\0\2\10\3\0\3\10\10\0\2\10\2\0"+
    "\1\10\1\u01ed\7\10\1\0\5\10\1\0\1\10\1\0"+
    "\15\10\14\0\3\10\6\0\3\10\2\0\2\10\3\0"+
    "\3\10\10\0\2\10\2\0\11\10\1\0\5\10\1\0"+
    "\1\10\1\0\4\10\1\u01ee\10\10\14\0\3\10\6\0"+
    "\3\10\2\0\2\10\3\0\3\10\10\0\2\10\2\0"+
    "\11\10\1\0\5\10\1\0\1\10\1\0\11\10\1\u01ef"+
    "\3\10\14\0\3\10\6\0\3\10\2\0\2\10\3\0"+
    "\3\10\10\0\2\10\2\0\11\10\1\0\4\10\1\u01f0"+
    "\1\0\1\10\1\0\15\10\14\0\3\10\6\0\3\10"+
    "\2\0\2\10\3\0\3\10\10\0\2\10\2\0\11\10"+
    "\1\0\4\10\1\u01f1\1\0\1\10\1\0\15\10\14\0"+
    "\3\10\6\0\3\10\2\0\2\10\3\0\3\10\10\0"+
    "\2\10\2\0\11\10\1\0\5\10\1\0\1\10\1\0"+
    "\2\10\1\u01f2\12\10\14\0\3\10\6\0\3\10\2\0"+
    "\2\10\3\0\3\10\10\0\2\10\2\0\4\10\1\u01f3"+
    "\4\10\1\0\5\10\1\0\1\10\1\0\15\10\14\0"+
    "\3\10\6\0\3\10\2\0\2\10\3\0\3\10\10\0"+
    "\2\10\2\0\4\10\1\u01f4\4\10\1\0\5\10\1\0"+
    "\1\10\1\0\15\10\14\0\3\10\6\0\3\10\2\0"+
    "\2\10\3\0\3\10\10\0\2\10\2\0\11\10\1\0"+
    "\5\10\1\0\1\10\1\0\4\10\1\u01f5\10\10\32\0"+
    "\1\140\100\0\1\u01f6\6\0\3\u01f6\2\0\1\u01f6\20\0"+
    "\1\u01f6\2\0\4\u01f6\7\0\2\u01f6\3\0\1\u01f6\2\0"+
    "\1\u01f6\2\0\1\u01f6\24\0\3\10\6\0\3\10\2\0"+
    "\2\10\3\0\3\10\10\0\2\10\2\0\11\10\1\0"+
    "\5\10\1\0\1\10\1\0\10\10\1\u01f7\4\10\14\0"+
    "\3\10\6\0\3\10\2\0\2\10\3\0\3\10\10\0"+
    "\2\10\2\0\5\10\1\u01f8\3\10\1\0\5\10\1\0"+
    "\1\10\1\0\15\10\14\0\3\10\6\0\3\10\2\0"+
    "\2\10\3\0\3\10\10\0\2\10\2\0\11\10\1\0"+
    "\5\10\1\0\1\10\1\0\3\10\1\u01f9\11\10\14\0"+
    "\3\10\6\0\3\10\2\0\2\10\3\0\3\10\10\0"+
    "\2\10\2\0\11\10\1\0\5\10\1\0\1\10\1\0"+
    "\1\10\1\u01fa\13\10\14\0\3\10\6\0\3\10\2\0"+
    "\2\10\3\0\3\10\10\0\2\10\2\0\1\10\1\u01fb"+
    "\7\10\1\0\5\10\1\0\1\10\1\0\15\10\14\0"+
    "\3\10\6\0\3\10\2\0\2\10\3\0\3\10\10\0"+
    "\2\10\2\0\3\10\1\u01fc\5\10\1\0\5\10\1\0"+
    "\1\10\1\0\15\10\14\0\3\10\6\0\3\10\2\0"+
    "\2\10\3\0\3\10\10\0\1\10\1\u01fd\2\0\11\10"+
    "\1\0\5\10\1\0\1\10\1\0\15\10\14\0\3\10"+
    "\6\0\3\10\2\0\2\10\3\0\3\10\10\0\2\10"+
    "\2\0\5\10\1\u01fe\3\10\1\0\5\10\1\0\1\10"+
    "\1\0\15\10\52\0\2\u01ff\25\0\1\u01ff\27\0\3\10"+
    "\6\0\3\10\2\0\2\10\3\0\3\10\10\0\2\10"+
    "\2\0\4\10\1\u0200\4\10\1\0\5\10\1\0\1\10"+
    "\1\0\15\10\14\0\3\10\6\0\3\10\2\0\2\10"+
    "\3\0\3\10\10\0\2\10\2\0\11\10\1\0\5\10"+
    "\1\0\1\10\1\0\2\10\1\u0201\12\10\14\0\3\10"+
    "\6\0\3\10\2\0\2\10\3\0\3\10\10\0\2\10"+
    "\2\0\1\10\1\u0202\7\10\1\0\5\10\1\0\1\10"+
    "\1\0\15\10\14\0\3\10\6\0\3\10\2\0\2\10"+
    "\3\0\3\10\10\0\2\10\2\0\1\10\1\u0203\7\10"+
    "\1\0\5\10\1\0\1\10\1\0\15\10\14\0\3\10"+
    "\6\0\3\10\2\0\2\10\3\0\3\10\10\0\2\10"+
    "\2\0\11\10\1\0\4\10\1\u0204\1\0\1\10\1\0"+
    "\15\10\14\0\3\10\6\0\3\10\2\0\2\10\3\0"+
    "\3\10\10\0\2\10\2\0\11\10\1\0\5\10\1\0"+
    "\1\10\1\0\4\10\1\u0205\10\10\32\0\1\166\100\0"+
    "\1\u0206\6\0\3\u0206\2\0\1\u0206\20\0\1\u0206\2\0"+
    "\4\u0206\7\0\2\u0206\3\0\1\u0206\2\0\1\u0206\2\0"+
    "\1\u0206\36\0\2\u01c5\26\0\1\u01c5\13\0\1\u01c5\50\0"+
    "\2\u01c5\2\0\1\u0121\23\0\1\u01c5\2\0\1\u0121\6\0"+
    "\1\u0121\1\0\1\u01c5\1\0\1\131\34\0\3\10\6\0"+
    "\3\10\2\0\2\10\3\0\3\10\10\0\1\10\1\u0207"+
    "\2\0\11\10\1\0\5\10\1\0\1\10\1\0\15\10"+
    "\14\0\3\10\6\0\3\10\2\0\2\10\3\0\3\10"+
    "\10\0\2\10\2\0\1\10\1\u0208\7\10\1\0\5\10"+
    "\1\0\1\10\1\0\15\10\14\0\3\10\6\0\3\10"+
    "\2\0\2\10\3\0\3\10\10\0\2\10\2\0\11\10"+
    "\1\0\5\10\1\0\1\10\1\0\2\10\1\u0209\12\10"+
    "\14\0\3\10\6\0\3\10\2\0\2\10\3\0\3\10"+
    "\10\0\2\10\2\0\11\10\1\0\5\10\1\0\1\10"+
    "\1\0\1\10\1\u020a\13\10\14\0\3\10\6\0\3\10"+
    "\2\0\2\10\3\0\3\10\10\0\2\10\2\0\11\10"+
    "\1\0\5\10\1\0\1\10\1\0\12\10\1\u020b\2\10"+
    "\14\0\3\10\6\0\3\10\2\0\2\10\3\0\3\10"+
    "\10\0\2\10\2\0\3\10\1\u020c\5\10\1\0\5\10"+
    "\1\0\1\10\1\0\15\10\14\0\3\10\6\0\3\10"+
    "\2\0\2\10\3\0\3\10\10\0\2\10\2\0\3\10"+
    "\1\u020d\5\10\1\0\5\10\1\0\1\10\1\0\15\10"+
    "\14\0\3\10\6\0\3\10\2\0\2\10\3\0\3\10"+
    "\10\0\2\10\2\0\1\10\1\u020e\7\10\1\0\5\10"+
    "\1\0\1\10\1\0\15\10\14\0\3\10\6\0\3\10"+
    "\2\0\2\10\3\0\3\10\10\0\2\10\2\0\11\10"+
    "\1\0\4\10\1\u020f\1\0\1\10\1\0\15\10\14\0"+
    "\3\10\6\0\3\10\2\0\2\10\3\0\3\10\10\0"+
    "\2\10\2\0\5\10\1\u0210\3\10\1\0\5\10\1\0"+
    "\1\10\1\0\15\10\14\0\3\10\6\0\3\10\2\0"+
    "\2\10\3\0\3\10\10\0\2\10\2\0\11\10\1\0"+
    "\5\10\1\0\1\10\1\0\4\10\1\u0211\10\10\14\0"+
    "\3\10\6\0\3\10\2\0\2\10\3\0\3\10\10\0"+
    "\2\10\2\0\11\10\1\0\5\10\1\0\1\10\1\0"+
    "\1\10\1\u0212\13\10\14\0\3\10\6\0\3\10\2\0"+
    "\2\10\3\0\3\10\10\0\2\10\2\0\3\10\1\u0213"+
    "\1\u0214\4\10\1\0\5\10\1\0\1\10\1\0\15\10"+
    "\14\0\3\10\6\0\3\10\2\0\2\10\3\0\3\10"+
    "\10\0\2\10\2\0\11\10\1\0\5\10\1\0\1\10"+
    "\1\0\1\10\1\u0215\13\10\14\0\3\10\6\0\3\10"+
    "\2\0\2\10\3\0\3\10\10\0\2\10\2\0\4\10"+
    "\1\u0216\4\10\1\0\5\10\1\0\1\10\1\0\15\10"+
    "\14\0\3\10\6\0\3\10\2\0\2\10\3\0\3\10"+
    "\10\0\2\10\2\0\11\10\1\0\5\10\1\0\1\10"+
    "\1\0\4\10\1\u0217\10\10\14\0\3\10\6\0\3\10"+
    "\2\0\2\10\3\0\3\10\10\0\2\10\2\0\4\10"+
    "\1\u0218\4\10\1\0\5\10\1\0\1\10\1\0\15\10"+
    "\14\0\3\10\6\0\3\10\2\0\2\10\3\0\3\10"+
    "\10\0\2\10\2\0\11\10\1\0\5\10\1\0\1\10"+
    "\1\0\1\10\1\u0219\13\10\14\0\3\10\6\0\3\10"+
    "\2\0\2\10\3\0\1\10\1\u021a\1\10\10\0\2\10"+
    "\2\0\11\10\1\0\5\10\1\0\1\10\1\0\15\10"+
    "\14\0\3\10\6\0\3\10\2\0\2\10\3\0\3\10"+
    "\10\0\2\10\2\0\2\10\1\u021b\6\10\1\0\5\10"+
    "\1\0\1\10\1\0\15\10\14\0\3\10\6\0\3\10"+
    "\2\0\2\10\3\0\3\10\10\0\2\10\2\0\5\10"+
    "\1\u021c\3\10\1\0\5\10\1\0\1\10\1\0\15\10"+
    "\14\0\3\10\6\0\3\10\2\0\2\10\3\0\3\10"+
    "\10\0\2\10\2\0\11\10\1\0\4\10\1\u021d\1\0"+
    "\1\10\1\0\15\10\14\0\3\10\6\0\3\10\2\0"+
    "\2\10\3\0\3\10\10\0\2\10\2\0\5\10\1\u021e"+
    "\3\10\1\0\5\10\1\0\1\10\1\0\15\10\14\0"+
    "\3\10\6\0\3\10\2\0\2\10\3\0\3\10\10\0"+
    "\2\10\2\0\5\10\1\u021f\3\10\1\0\5\10\1\0"+
    "\1\10\1\0\15\10\14\0\3\10\6\0\3\10\2\0"+
    "\2\10\3\0\3\10\10\0\2\10\2\0\11\10\1\0"+
    "\5\10\1\0\1\10\1\0\1\10\1\u0220\13\10\14\0"+
    "\3\10\6\0\3\10\2\0\2\10\3\0\1\10\1\u01a8"+
    "\1\10\10\0\2\10\2\0\11\10\1\0\5\10\1\0"+
    "\1\10\1\0\15\10\14\0\3\10\6\0\3\10\2\0"+
    "\2\10\3\0\3\10\10\0\2\10\2\0\1\10\1\u0221"+
    "\7\10\1\0\5\10\1\0\1\10\1\0\15\10\14\0"+
    "\3\10\6\0\3\10\2\0\2\10\3\0\3\10\10\0"+
    "\2\10\2\0\11\10\1\0\5\10\1\0\1\10\1\0"+
    "\1\10\1\u0222\13\10\14\0\3\10\6\0\3\10\2\0"+
    "\2\10\3\0\3\10\10\0\2\10\2\0\11\10\1\0"+
    "\4\10\1\u0223\1\0\1\10\1\0\15\10\14\0\3\10"+
    "\6\0\3\10\2\0\2\10\3\0\3\10\10\0\2\10"+
    "\2\0\11\10\1\0\5\10\1\0\1\10\1\0\2\10"+
    "\1\u0224\12\10\16\0\1\327\6\0\3\327\2\0\1\327"+
    "\20\0\1\327\2\0\4\327\7\0\2\327\3\0\1\327"+
    "\2\0\1\327\2\0\1\327\24\0\3\10\6\0\3\10"+
    "\2\0\2\10\3\0\3\10\10\0\2\10\2\0\11\10"+
    "\1\0\5\10\1\0\1\10\1\0\2\10\1\u0225\12\10"+
    "\14\0\3\10\6\0\3\10\2\0\2\10\3\0\3\10"+
    "\10\0\1\10\1\u0226\2\0\11\10\1\0\5\10\1\0"+
    "\1\10\1\0\15\10\14\0\3\10\6\0\3\10\2\0"+
    "\2\10\3\0\3\10\10\0\2\10\2\0\5\10\1\u0227"+
    "\3\10\1\0\5\10\1\0\1\10\1\0\15\10\14\0"+
    "\3\10\6\0\3\10\2\0\2\10\3\0\3\10\10\0"+
    "\2\10\2\0\11\10\1\0\5\10\1\0\1\10\1\0"+
    "\2\10\1\u0228\12\10\14\0\3\10\6\0\3\10\2\0"+
    "\2\10\3\0\3\10\10\0\2\10\2\0\5\10\1\u0229"+
    "\3\10\1\0\5\10\1\0\1\10\1\0\15\10\14\0"+
    "\3\10\6\0\3\10\2\0\2\10\3\0\3\10\10\0"+
    "\2\10\2\0\11\10\1\0\5\10\1\0\1\10\1\0"+
    "\1\10\1\u022a\13\10\16\0\1\371\6\0\3\371\2\0"+
    "\1\371\20\0\1\371\2\0\4\371\7\0\2\371\3\0"+
    "\1\371\2\0\1\371\2\0\1\371\24\0\3\10\6\0"+
    "\3\10\2\0\2\10\3\0\3\10\10\0\2\10\2\0"+
    "\11\10\1\0\4\10\1\u022b\1\0\1\10\1\0\15\10"+
    "\14\0\3\10\6\0\3\10\2\0\2\10\3\0\3\10"+
    "\10\0\2\10\2\0\11\10\1\0\5\10\1\0\1\10"+
    "\1\0\1\10\1\u022c\13\10\14\0\3\10\6\0\3\10"+
    "\2\0\2\10\3\0\3\10\10\0\2\10\2\0\11\10"+
    "\1\0\5\10\1\0\1\10\1\0\5\10\1\u022d\7\10"+
    "\14\0\3\10\6\0\3\10\2\0\2\10\3\0\3\10"+
    "\10\0\2\10\2\0\11\10\1\0\5\10\1\0\1\10"+
    "\1\0\10\10\1\u022e\4\10\14\0\3\10\6\0\3\10"+
    "\2\0\2\10\3\0\3\10\10\0\2\10\2\0\1\10"+
    "\1\u022f\7\10\1\0\5\10\1\0\1\10\1\0\15\10"+
    "\14\0\3\10\6\0\3\10\2\0\2\10\3\0\3\10"+
    "\10\0\2\10\2\0\11\10\1\0\5\10\1\0\1\10"+
    "\1\0\2\10\1\u0230\12\10\14\0\3\10\6\0\3\10"+
    "\2\0\2\10\3\0\3\10\10\0\2\10\2\0\11\10"+
    "\1\0\5\10\1\0\1\10\1\0\2\10\1\u0231\12\10"+
    "\14\0\3\10\6\0\3\10\2\0\2\10\3\0\3\10"+
    "\10\0\2\10\2\0\11\10\1\0\5\10\1\0\1\10"+
    "\1\0\7\10\1\u0232\5\10\14\0\3\10\6\0\3\10"+
    "\2\0\2\10\3\0\3\10\10\0\2\10\2\0\1\10"+
    "\1\u0233\7\10\1\0\5\10\1\0\1\10\1\0\15\10"+
    "\14\0\3\10\6\0\3\10\2\0\2\10\3\0\3\10"+
    "\10\0\2\10\2\0\1\10\1\u0234\7\10\1\0\5\10"+
    "\1\0\1\10\1\0\15\10\14\0\3\10\6\0\3\10"+
    "\2\0\2\10\3\0\3\10\10\0\2\10\2\0\11\10"+
    "\1\0\4\10\1\u0235\1\0\1\10\1\0\15\10\14\0"+
    "\3\10\6\0\3\10\2\0\2\10\3\0\3\10\10\0"+
    "\2\10\2\0\7\10\1\u0236\1\10\1\0\5\10\1\0"+
    "\1\10\1\0\15\10\14\0\3\10\6\0\3\10\2\0"+
    "\2\10\3\0\3\10\10\0\1\10\1\u0237\2\0\11\10"+
    "\1\0\5\10\1\0\1\10\1\0\15\10\14\0\3\10"+
    "\6\0\3\10\2\0\2\10\3\0\3\10\10\0\2\10"+
    "\2\0\11\10\1\0\4\10\1\u0238\1\0\1\10\1\0"+
    "\15\10\14\0\3\10\6\0\3\10\2\0\2\10\3\0"+
    "\3\10\10\0\2\10\2\0\11\10\1\0\5\10\1\0"+
    "\1\10\1\0\5\10\1\u0239\7\10\14\0\3\10\6\0"+
    "\3\10\2\0\2\10\3\0\3\10\10\0\1\10\1\u023a"+
    "\2\0\11\10\1\0\5\10\1\0\1\10\1\0\15\10"+
    "\14\0\3\10\6\0\3\10\2\0\2\10\3\0\3\10"+
    "\10\0\2\10\2\0\11\10\1\0\5\10\1\0\1\10"+
    "\1\0\6\10\1\u023b\6\10\14\0\3\10\6\0\3\10"+
    "\2\0\2\10\3\0\3\10\10\0\2\10\2\0\11\10"+
    "\1\0\5\10\1\0\1\10\1\0\4\10\1\u023c\10\10"+
    "\14\0\3\10\6\0\3\10\2\0\2\10\3\0\3\10"+
    "\10\0\2\10\2\0\5\10\1\u023d\3\10\1\0\5\10"+
    "\1\0\1\10\1\0\15\10\14\0\3\10\6\0\3\10"+
    "\2\0\2\10\3\0\3\10\10\0\2\10\2\0\11\10"+
    "\1\0\5\10\1\0\1\10\1\0\2\10\1\u023e\12\10"+
    "\14\0\3\10\6\0\3\10\2\0\2\10\3\0\1\10"+
    "\1\u023f\1\10\10\0\2\10\2\0\11\10\1\0\5\10"+
    "\1\0\1\10\1\0\15\10\14\0\3\10\6\0\3\10"+
    "\2\0\2\10\3\0\3\10\10\0\2\10\2\0\11\10"+
    "\1\0\5\10\1\0\1\10\1\0\5\10\1\u0240\7\10"+
    "\14\0\3\10\6\0\3\10\2\0\2\10\3\0\3\10"+
    "\10\0\2\10\2\0\11\10\1\0\5\10\1\0\1\10"+
    "\1\0\2\10\1\u0241\12\10\14\0\3\10\6\0\3\10"+
    "\2\0\2\10\3\0\3\10\10\0\2\10\2\0\11\10"+
    "\1\0\4\10\1\u0242\1\0\1\10\1\0\15\10\14\0"+
    "\3\10\6\0\3\10\2\0\2\10\3\0\3\10\10\0"+
    "\2\10\2\0\11\10\1\0\5\10\1\0\1\10\1\0"+
    "\4\10\1\u0243\10\10\14\0\3\10\6\0\3\10\2\0"+
    "\2\10\3\0\3\10\10\0\2\10\2\0\4\10\1\u0244"+
    "\4\10\1\0\5\10\1\0\1\10\1\0\15\10\14\0"+
    "\3\10\6\0\3\10\2\0\2\10\3\0\3\10\10\0"+
    "\2\10\2\0\5\10\1\u0245\3\10\1\0\5\10\1\0"+
    "\1\10\1\0\15\10\14\0\3\10\6\0\3\10\2\0"+
    "\2\10\3\0\3\10\10\0\2\10\2\0\11\10\1\0"+
    "\5\10\1\0\1\10\1\0\1\10\1\u0246\13\10\14\0"+
    "\3\10\6\0\3\10\2\0\2\10\3\0\3\10\10\0"+
    "\2\10\2\0\11\10\1\0\5\10\1\0\1\10\1\0"+
    "\4\10\1\u0247\10\10\14\0\3\10\6\0\3\10\2\0"+
    "\2\10\3\0\3\10\10\0\2\10\2\0\11\10\1\0"+
    "\5\10\1\0\1\10\1\0\4\10\1\u0248\10\10\14\0"+
    "\3\10\6\0\3\10\2\0\2\10\3\0\3\10\10\0"+
    "\2\10\2\0\11\10\1\0\5\10\1\0\1\10\1\0"+
    "\1\10\1\u0249\13\10\14\0\3\10\6\0\3\10\2\0"+
    "\2\10\3\0\3\10\10\0\2\10\2\0\11\10\1\0"+
    "\5\10\1\0\1\10\1\0\2\10\1\u024a\12\10\14\0"+
    "\3\10\6\0\3\10\2\0\2\10\3\0\3\10\10\0"+
    "\2\10\2\0\5\10\1\u024b\3\10\1\0\5\10\1\0"+
    "\1\10\1\0\15\10\14\0\3\10\6\0\3\10\2\0"+
    "\2\10\3\0\3\10\10\0\2\10\2\0\11\10\1\0"+
    "\5\10\1\0\1\10\1\0\4\10\1\u024c\10\10\14\0"+
    "\3\10\6\0\3\10\2\0\2\10\3\0\3\10\10\0"+
    "\2\10\2\0\5\10\1\u024d\3\10\1\0\5\10\1\0"+
    "\1\10\1\0\15\10\14\0\3\10\6\0\3\10\2\0"+
    "\2\10\3\0\3\10\10\0\2\10\2\0\11\10\1\0"+
    "\5\10\1\0\1\10\1\0\4\10\1\u024e\10\10\14\0"+
    "\3\10\6\0\3\10\2\0\1\10\1\u024f\3\0\3\10"+
    "\10\0\2\10\2\0\11\10\1\0\5\10\1\0\1\10"+
    "\1\0\15\10\14\0\3\10\6\0\3\10\2\0\2\10"+
    "\3\0\3\10\10\0\2\10\2\0\11\10\1\0\5\10"+
    "\1\0\1\10\1\0\4\10\1\u0250\10\10\14\0\3\10"+
    "\6\0\3\10\2\0\2\10\3\0\3\10\10\0\2\10"+
    "\2\0\5\10\1\u0251\3\10\1\0\5\10\1\0\1\10"+
    "\1\0\15\10\14\0\3\10\6\0\3\10\2\0\2\10"+
    "\3\0\3\10\10\0\2\10\2\0\11\10\1\0\5\10"+
    "\1\0\1\10\1\0\6\10\1\u0252\6\10\14\0\3\10"+
    "\6\0\3\10\2\0\2\10\3\0\3\10\10\0\2\10"+
    "\2\0\4\10\1\u0253\4\10\1\0\5\10\1\0\1\10"+
    "\1\0\15\10\14\0\3\10\6\0\3\10\2\0\2\10"+
    "\3\0\3\10\10\0\2\10\2\0\11\10\1\0\5\10"+
    "\1\0\1\10\1\0\3\10\1\u0254\11\10\14\0\3\10"+
    "\6\0\3\10\2\0\2\10\3\0\3\10\10\0\2\10"+
    "\2\0\11\10\1\0\5\10\1\0\1\10\1\0\4\10"+
    "\1\u0255\10\10\14\0\3\10\6\0\3\10\2\0\2\10"+
    "\3\0\3\10\10\0\1\10\1\u0256\2\0\11\10\1\0"+
    "\5\10\1\0\1\10\1\0\15\10\14\0\3\10\6\0"+
    "\3\10\2\0\2\10\3\0\3\10\10\0\2\10\2\0"+
    "\11\10\1\0\5\10\1\0\1\10\1\0\4\10\1\u0257"+
    "\10\10\14\0\3\10\6\0\3\10\2\0\2\10\3\0"+
    "\3\10\10\0\1\10\1\u0258\2\0\11\10\1\0\5\10"+
    "\1\0\1\10\1\0\15\10\14\0\3\10\6\0\3\10"+
    "\2\0\2\10\3\0\3\10\10\0\2\10\2\0\11\10"+
    "\1\0\5\10\1\0\1\10\1\0\1\10\1\u0259\13\10"+
    "\14\0\3\10\6\0\3\10\2\0\2\10\3\0\3\10"+
    "\10\0\2\10\2\0\11\10\1\0\5\10\1\0\1\10"+
    "\1\0\3\10\1\u025a\11\10\11\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[34419];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;
  private static final char[] EMPTY_BUFFER = new char[0];
  private static final int YYEOF = -1;
  private static java.io.Reader zzReader = null; // Fake

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unkown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\4\0\1\11\13\1\1\11\6\1\4\11\2\1\2\11"+
    "\3\1\1\11\23\1\1\11\1\1\2\11\4\1\1\11"+
    "\2\1\1\11\3\1\1\11\3\1\1\0\1\1\4\11"+
    "\3\1\3\11\1\0\2\1\1\11\2\0\2\11\1\0"+
    "\1\1\1\0\1\1\2\0\1\1\1\0\6\1\1\0"+
    "\2\1\1\11\1\1\1\11\4\1\5\0\42\1\2\11"+
    "\31\1\6\11\1\1\5\11\1\1\1\0\1\1\1\11"+
    "\1\1\3\11\2\1\1\0\5\1\1\11\4\0\1\11"+
    "\1\0\12\1\4\0\2\11\1\1\1\11\10\1\1\11"+
    "\5\0\1\1\1\0\45\1\1\11\35\1\1\11\1\1"+
    "\2\11\3\1\4\0\1\11\12\1\4\0\1\11\11\1"+
    "\5\0\1\1\2\0\101\1\2\0\23\1\3\0\61\1"+
    "\1\0\10\1\1\11\6\1\1\0\124\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[602];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private CharSequence zzBuffer = "";

  /** this buffer may contains the current text array to be matched when it is cheap to acquire it */
  private char[] zzBufferArray;

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the textposition at the last state to be included in yytext */
  private int zzPushbackPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /**
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /* user code: */

  private int nestedCommentDepth = 0;
  private int blockCommentDepth = 0;

  public CSharpLexer() {
    this((java.io.Reader)null);
  }


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public CSharpLexer(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x10000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 1750) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }

  public final int getTokenStart(){
    return zzStartRead;
  }

  public final int getTokenEnd(){
    return getTokenStart() + yylength();
  }

  public void reset(CharSequence buffer, int start, int end,int initialState){
    zzBuffer = buffer;
    zzBufferArray = com.intellij.util.text.CharArrayUtil.fromSequenceWithoutCopying(buffer);
    zzCurrentPos = zzMarkedPos = zzStartRead = start;
    zzPushbackPos = 0;
    zzAtEOF  = false;
    zzAtBOL = true;
    zzEndRead = end;
    yybegin(initialState);
  }

  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   *
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {
    return true;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final CharSequence yytext() {
    return zzBuffer.subSequence(zzStartRead, zzMarkedPos);
  }


  /**
   * Returns the character at position <tt>pos</tt> from the
   * matched text.
   *
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch.
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBufferArray != null ? zzBufferArray[zzStartRead+pos]:zzBuffer.charAt(zzStartRead+pos);
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of
   * yypushback(int) and a match-all fallback rule) this method
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  }


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public IElementType advance() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    CharSequence zzBufferL = zzBuffer;
    char[] zzBufferArrayL = zzBufferArray;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;

      zzState = ZZ_LEXSTATE[zzLexicalState];


      zzForAction: {
        while (true) {

          if (zzCurrentPosL < zzEndReadL)
            zzInput = (zzBufferArrayL != null ? zzBufferArrayL[zzCurrentPosL++] : zzBufferL.charAt(zzCurrentPosL++));
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = (zzBufferArrayL != null ? zzBufferArrayL[zzCurrentPosL++] : zzBufferL.charAt(zzCurrentPosL++));
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          int zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
        case 71: 
          { return OP_TILDA_EQ;
          }
        case 186: break;
        case 151: 
          { return KW_TYPEOF;
          }
        case 187: break;
        case 48: 
          { return ALTERNATE_WYSIWYG_STRING;
          }
        case 188: break;
        case 99: 
          { return OP_USH_RIGHT_EQ;
          }
        case 189: break;
        case 146: 
          { return KW_SIZEOF;
          }
        case 190: break;
        case 153: 
          { return KW_UNSAFE;
          }
        case 191: break;
        case 140: 
          { return KW_RETURN;
          }
        case 192: break;
        case 54: 
          { return KW_DO;
          }
        case 193: break;
        case 167: 
          { return KW_PARTIAL;
          }
        case 194: break;
        case 180: 
          { return KW_NAMESPACE;
          }
        case 195: break;
        case 74: 
          { blockCommentDepth += 1;
		return CSharpTypes.BLOCK_COMMENT;
          }
        case 196: break;
        case 114: 
          { return KW_LOCK;
          }
        case 197: break;
        case 44: 
          { return FLOAT_LITERAL;
          }
        case 198: break;
        case 4: 
          { return OP_DIV;
          }
        case 199: break;
        case 120: 
          { return KW_SHORT;
          }
        case 200: break;
        case 32: 
          { return CSharpTypes.BLOCK_COMMENT;
          }
        case 201: break;
        case 170: 
          { return KW_ABSTRACT;
          }
        case 202: break;
        case 127: 
          { return KW_BREAK;
          }
        case 203: break;
        case 122: 
          { return KW_WHILE;
          }
        case 204: break;
        case 87: 
          { return CHARACTER_LITERAL;
          }
        case 205: break;
        case 50: 
          { return OP_LESS_GR;
          }
        case 206: break;
        case 152: 
          { return KW_USHORT;
          }
        case 207: break;
        case 16: 
          { return OP_GT;
          }
        case 208: break;
        case 53: 
          { return OP_GT_EQ;
          }
        case 209: break;
        case 104: 
          { return KW_FROM;
          }
        case 210: break;
        case 105: 
          { return KW_NULL;
          }
        case 211: break;
        case 90: 
          { return KW_NEW;
          }
        case 212: break;
        case 181: 
          { return KW_UNCHECKED;
          }
        case 213: break;
        case 37: 
          { return OP_MUL_EQ;
          }
        case 214: break;
        case 119: 
          { return KW_SBYTE;
          }
        case 215: break;
        case 174: 
          { return KW_CONTINUE;
          }
        case 216: break;
        case 25: 
          { return OP_AT;
          }
        case 217: break;
        case 57: 
          { return KW_IS;
          }
        case 218: break;
        case 123: 
          { return KW_WHERE;
          }
        case 219: break;
        case 77: 
          { return OP_NOT_LESS_EQ;
          }
        case 220: break;
        case 100: 
          { return KW_WHEN;
          }
        case 221: break;
        case 101: 
          { return KW_BASE;
          }
        case 222: break;
        case 20: 
          { return OP_DOT;
          }
        case 223: break;
        case 161: 
          { return KW_FINALLY;
          }
        case 224: break;
        case 27: 
          { return OP_OR;
          }
        case 225: break;
        case 85: 
          { return OP_USH_RIGHT;
          }
        case 226: break;
        case 51: 
          { return OP_LESS_EQ;
          }
        case 227: break;
        case 58: 
          { return KW_IF;
          }
        case 228: break;
        case 55: 
          { return KW_AS;
          }
        case 229: break;
        case 149: 
          { return KW_DOUBLE;
          }
        case 230: break;
        case 56: 
          { return KW_BY;
          }
        case 231: break;
        case 40: 
          { return OP_NOT_GR;
          }
        case 232: break;
        case 136: 
          { return KW_CONST;
          }
        case 233: break;
        case 130: 
          { return KW_FLOAT;
          }
        case 234: break;
        case 29: 
          { return OP_TILDA;
          }
        case 235: break;
        case 184: 
          { return KW_STACKALLOC;
          }
        case 236: break;
        case 163: 
          { return KW_VIRTUAL;
          }
        case 237: break;
        case 131: 
          { return KW_THROW;
          }
        case 238: break;
        case 61: 
          { return OP_MINUS_MINUS;
          }
        case 239: break;
        case 52: 
          { return OP_SH_RIGHT;
          }
        case 240: break;
        case 132: 
          { return KW_USING;
          }
        case 241: break;
        case 183: 
          { return KW_PROTECTED;
          }
        case 242: break;
        case 129: 
          { return KW_FIXED;
          }
        case 243: break;
        case 118: 
          { return KW_JOIN;
          }
        case 244: break;
        case 9: 
          { return OP_AND;
          }
        case 245: break;
        case 41: 
          { return OP_NOT_EQ;
          }
        case 246: break;
        case 6: 
          { return OP_NOT;
          }
        case 247: break;
        case 73: 
          { nestedCommentDepth -= 1;
		if(nestedCommentDepth == 0) {
			yybegin(YYINITIAL); //Exit nesting comment block
		}
		return CSharpTypes.NESTING_BLOCK_COMMENT;
          }
        case 248: break;
        case 88: 
          { return KW_ADD;
          }
        case 249: break;
        case 135: 
          { return KW_CLASS;
          }
        case 250: break;
        case 23: 
          { return OP_EQ;
          }
        case 251: break;
        case 165: 
          { return KW_ORDERBY;
          }
        case 252: break;
        case 80: 
          { return KW_REF;
          }
        case 253: break;
        case 182: 
          { return KW_INTERFACE;
          }
        case 254: break;
        case 78: 
          { return OP_NOT_GR_EQ;
          }
        case 255: break;
        case 83: 
          { return OP_SH_LEFT_EQ;
          }
        case 256: break;
        case 141: 
          { return KW_REMOVE;
          }
        case 257: break;
        case 138: 
          { return KW_EVENT;
          }
        case 258: break;
        case 144: 
          { return KW_STRING;
          }
        case 259: break;
        case 98: 
          { return OP_UNORD;
          }
        case 260: break;
        case 155: 
          { return KW_EQUALS;
          }
        case 261: break;
        case 159: 
          { return KW_DECIMAL;
          }
        case 262: break;
        case 19: 
          { return OP_QUEST;
          }
        case 263: break;
        case 26: 
          { return OP_MOD;
          }
        case 264: break;
        case 18: 
          { return OP_BRACES_RIGHT;
          }
        case 265: break;
        case 45: 
          { return OP_BOOL_AND;
          }
        case 266: break;
        case 145: 
          { return KW_STATIC;
          }
        case 267: break;
        case 97: 
          { return OP_POW_EQ;
          }
        case 268: break;
        case 96: 
          { return KW_OUT;
          }
        case 269: break;
        case 86: 
          { return OP_SH_RIGHT_EQ;
          }
        case 270: break;
        case 36: 
          { return OP_DIV_EQ;
          }
        case 271: break;
        case 64: 
          { return OP_LAMBDA_ARROW;
          }
        case 272: break;
        case 168: 
          { return KW_READONLY;
          }
        case 273: break;
        case 65: 
          { return OP_EQ_EQ;
          }
        case 274: break;
        case 33: 
          { return LINE_COMMENT;
          }
        case 275: break;
        case 82: 
          { return KW_SET;
          }
        case 276: break;
        case 164: 
          { return KW_CHECKED;
          }
        case 277: break;
        case 60: 
          { return OP_DDOT;
          }
        case 278: break;
        case 162: 
          { return KW_FOREACH;
          }
        case 279: break;
        case 115: 
          { return KW_GOTO;
          }
        case 280: break;
        case 116: 
          { return KW_ENUM;
          }
        case 281: break;
        case 15: 
          { return OP_LESS;
          }
        case 282: break;
        case 63: 
          { return KW_ON;
          }
        case 283: break;
        case 2: 
          { return com.intellij.psi.TokenType.WHITE_SPACE;
          }
        case 284: break;
        case 12: 
          { return OP_BRACKET_RIGHT;
          }
        case 285: break;
        case 11: 
          { return OP_BRACKET_LEFT;
          }
        case 286: break;
        case 112: 
          { return KW_CHAR;
          }
        case 287: break;
        case 42: 
          { return OP_PLUS_PLUS;
          }
        case 288: break;
        case 22: 
          { return OP_COLON;
          }
        case 289: break;
        case 76: 
          { return OP_UNORD_EQ;
          }
        case 290: break;
        case 139: 
          { return KW_YIELD;
          }
        case 291: break;
        case 70: 
          { return OP_POW;
          }
        case 292: break;
        case 143: 
          { return KW_STRUCT;
          }
        case 293: break;
        case 13: 
          { return OP_PAR_LEFT;
          }
        case 294: break;
        case 133: 
          { return KW_ULONG;
          }
        case 295: break;
        case 59: 
          { return KW_IN;
          }
        case 296: break;
        case 10: 
          { return OP_SCOLON;
          }
        case 297: break;
        case 107: 
          { return KW_THIS;
          }
        case 298: break;
        case 31: 
          { return CSharpTypes.NESTING_BLOCK_COMMENT;
          }
        case 299: break;
        case 121: 
          { return DELIMITED_STRING;
          }
        case 300: break;
        case 47: 
          { return DOUBLE_QUOTED_STRING;
          }
        case 301: break;
        case 177: 
          { return KW_OPERATOR;
          }
        case 302: break;
        case 39: 
          { return OP_NOT_LESS;
          }
        case 303: break;
        case 142: 
          { return KW_SWITCH;
          }
        case 304: break;
        case 38: 
          { return SHEBANG;
          }
        case 305: break;
        case 134: 
          { return KW_CATCH;
          }
        case 306: break;
        case 35: 
          { yybegin(NESTING_COMMENT_CONTENT);
		nestedCommentDepth = 1;
		return CSharpTypes.NESTING_BLOCK_COMMENT;
          }
        case 307: break;
        case 91: 
          { return KW_TRY;
          }
        case 308: break;
        case 30: 
          { return OP_DOLLAR;
          }
        case 309: break;
        case 179: 
          { return KW_ASCENDING;
          }
        case 310: break;
        case 28: 
          { return OP_XOR;
          }
        case 311: break;
        case 81: 
          { return HEX_STRING;
          }
        case 312: break;
        case 103: 
          { return KW_BOOL;
          }
        case 313: break;
        case 5: 
          { return OP_ASTERISK;
          }
        case 314: break;
        case 69: 
          { return OP_XOR_EQ;
          }
        case 315: break;
        case 150: 
          { return KW_NAMEOF;
          }
        case 316: break;
        case 110: 
          { return KW_INTO;
          }
        case 317: break;
        case 92: 
          { return KW_INT;
          }
        case 318: break;
        case 89: 
          { return KW_FOR;
          }
        case 319: break;
        case 185: 
          { return KW_DESCENDING;
          }
        case 320: break;
        case 117: 
          { return KW_ELSE;
          }
        case 321: break;
        case 154: 
          { return KW_EXTERN;
          }
        case 322: break;
        case 178: 
          { return KW_ARGLIST;
          }
        case 323: break;
        case 157: 
          { return KW_PUBLIC;
          }
        case 324: break;
        case 93: 
          { return OP_TRIPLEDOT;
          }
        case 325: break;
        case 68: 
          { return OP_BOOL_OR;
          }
        case 326: break;
        case 126: 
          { return KW_ALIAS;
          }
        case 327: break;
        case 160: 
          { return KW_DYNAMIC;
          }
        case 328: break;
        case 108: 
          { return KW_VOID;
          }
        case 329: break;
        case 125: 
          { return KW_AWAIT;
          }
        case 330: break;
        case 128: 
          { return KW_FALSE;
          }
        case 331: break;
        case 67: 
          { return OP_OR_EQ;
          }
        case 332: break;
        case 106: 
          { return KW_TRUE;
          }
        case 333: break;
        case 43: 
          { return OP_PLUS_EQ;
          }
        case 334: break;
        case 113: 
          { return KW_LONG;
          }
        case 335: break;
        case 72: 
          { nestedCommentDepth += 1;
		return CSharpTypes.NESTING_BLOCK_COMMENT;
          }
        case 336: break;
        case 147: 
          { return KW_SEALED;
          }
        case 337: break;
        case 21: 
          { return OP_MINUS;
          }
        case 338: break;
        case 156: 
          { return KW_OBJECT;
          }
        case 339: break;
        case 79: 
          { return WYSIWYG_STRING;
          }
        case 340: break;
        case 14: 
          { return OP_PAR_RIGHT;
          }
        case 341: break;
        case 24: 
          { return OP_COMMA;
          }
        case 342: break;
        case 1: 
          { return com.intellij.psi.TokenType.BAD_CHARACTER;
          }
        case 343: break;
        case 75: 
          { blockCommentDepth -= 1;
		if(blockCommentDepth == 0) {
			yybegin(YYINITIAL); //Exit nesting comment block
		}
		return CSharpTypes.BLOCK_COMMENT;
          }
        case 344: break;
        case 66: 
          { return OP_MOD_EQ;
          }
        case 345: break;
        case 95: 
          { return KW_GET;
          }
        case 346: break;
        case 7: 
          { return OP_PLUS;
          }
        case 347: break;
        case 46: 
          { return OP_AND_EQ;
          }
        case 348: break;
        case 102: 
          { return KW_BYTE;
          }
        case 349: break;
        case 176: 
          { return KW_OVERRIDE;
          }
        case 350: break;
        case 171: 
          { return KW_VOLATILE;
          }
        case 351: break;
        case 148: 
          { return KW_SELECT;
          }
        case 352: break;
        case 109: 
          { return KW_UINT;
          }
        case 353: break;
        case 34: 
          { yybegin(BLOCK_COMMENT_CONTENT);
		blockCommentDepth = 1;
		return CSharpTypes.BLOCK_COMMENT;
          }
        case 354: break;
        case 111: 
          { return KW_CASE;
          }
        case 355: break;
        case 169: 
          { return KW_DELEGATE;
          }
        case 356: break;
        case 124: 
          { return KW_ASYNC;
          }
        case 357: break;
        case 173: 
          { return KW_IMPLICIT;
          }
        case 358: break;
        case 8: 
          { return INTEGER_LITERAL;
          }
        case 359: break;
        case 3: 
          { return ID;
          }
        case 360: break;
        case 17: 
          { return OP_BRACES_LEFT;
          }
        case 361: break;
        case 49: 
          { return OP_SH_LEFT;
          }
        case 362: break;
        case 172: 
          { return KW_INTERNAL;
          }
        case 363: break;
        case 166: 
          { return KW_PRIVATE;
          }
        case 364: break;
        case 62: 
          { return OP_MINUS_EQ;
          }
        case 365: break;
        case 158: 
          { return KW_DEFAULT;
          }
        case 366: break;
        case 94: 
          { return KW_LET;
          }
        case 367: break;
        case 84: 
          { return OP_LESS_GR_EQ;
          }
        case 368: break;
        case 175: 
          { return KW_EXPLICIT;
          }
        case 369: break;
        case 137: 
          { return KW_GROUP;
          }
        case 370: break;
        default:
          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
            zzAtEOF = true;
            return null;
          }
          else {
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
